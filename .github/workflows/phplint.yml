name: PHP Lint

on:
  push:
    branches:
      - 'main'

  pull_request:
    branches:
      - main
      - development

jobs:
  phpcs:
    runs-on: ubuntu-latest

    container:
      image: alledia/future-dev-workspace-terminal:latest
      options: -v ${{ github.workspace }}:/project

    strategy:
      fail-fast: false

    name: PHP Lint on PHP 7.2

    env:
      COMPOSER_VERSION: 2

    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Setup Composer
        run: composer config --global github-oauth.github.com ${{ secrets.ACCESS_TOKEN }}

      - name: Get composer cache dir
        id: composer-cache-dir
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies installed with Composer
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Update composer.lock
        run: composer update --lock --no-install

      - name: Install Composer dependencies
        run: composer install --no-interaction --no-progress --no-suggest --prefer-dist

      - name: Get npm cache dir
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}

      - uses: actions/cache@v3
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install Node.js dependencies
        run: npm install

      - name: Fixes scripts permissions
        run: chmod +x /project/dev-workspace/docker/scripts/ppbuild

      - name: Build to directory
        run: npm run build:dir

      - name: Check syntax errors on built directory
        run: npm run phplint
