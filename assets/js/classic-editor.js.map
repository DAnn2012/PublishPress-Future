{"version":3,"file":"classic-editor.js","mappings":"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","sources":["webpack://post-expirator/./assets/jsx/components/ButtonsPanel.jsx","webpack://post-expirator/./assets/jsx/components/CheckboxControl.jsx","webpack://post-expirator/./assets/jsx/components/DateTimePicker.jsx","webpack://post-expirator/./assets/jsx/components/FutureActionPanel.jsx","webpack://post-expirator/./assets/jsx/components/FutureActionPanelBlockEditor.jsx","webpack://post-expirator/./assets/jsx/components/FutureActionPanelBulkEdit.jsx","webpack://post-expirator/./assets/jsx/components/FutureActionPanelClassicEditor.jsx","webpack://post-expirator/./assets/jsx/components/FutureActionPanelQuickEdit.jsx","webpack://post-expirator/./assets/jsx/components/NonceControl.jsx","webpack://post-expirator/./assets/jsx/components/PostTypeSettingsPanel.jsx","webpack://post-expirator/./assets/jsx/components/PostTypesSettingsPanels.jsx","webpack://post-expirator/./assets/jsx/components/SelectControl.jsx","webpack://post-expirator/./assets/jsx/components/SettingRow.jsx","webpack://post-expirator/./assets/jsx/components/SettingsFieldset.jsx","webpack://post-expirator/./assets/jsx/components/SettingsForm.jsx","webpack://post-expirator/./assets/jsx/components/SettingsSection.jsx","webpack://post-expirator/./assets/jsx/components/SettingsTable.jsx","webpack://post-expirator/./assets/jsx/components/Spinner.jsx","webpack://post-expirator/./assets/jsx/components/SubmitButton.jsx","webpack://post-expirator/./assets/jsx/components/TextControl.jsx","webpack://post-expirator/./assets/jsx/components/ToggleArrowButton.jsx","webpack://post-expirator/./assets/jsx/components/ToggleCalendarDatePicker.jsx","webpack://post-expirator/./assets/jsx/components/TokensControl.jsx","webpack://post-expirator/./assets/jsx/components/TrueFalseControl.jsx","webpack://post-expirator/./assets/jsx/components/index.jsx","webpack://post-expirator/./assets/jsx/data.jsx","webpack://post-expirator/./assets/jsx/time.jsx","webpack://post-expirator/./assets/jsx/utils.jsx","webpack://post-expirator/external var \"ReactDOM\"","webpack://post-expirator/external var \"publishpressFutureClassicEditorConfig\"","webpack://post-expirator/external var \"wp\"","webpack://post-expirator/external var \"wp.components\"","webpack://post-expirator/external var \"wp.data\"","webpack://post-expirator/external var \"wp.element\"","webpack://post-expirator/external var \"wp.hooks\"","webpack://post-expirator/external var \"wp.url\"","webpack://post-expirator/webpack/bootstrap","webpack://post-expirator/./assets/jsx/classic-editor.jsx"],"sourcesContent":["/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\n\nexport const ButtonsPanel = function (props) {\n    return (\n        <div>\n            {props.children}\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\nimport { Fragment, useState  } from \"&wp.element\";\nimport { CheckboxControl as WPCheckboxControl } from \"&wp.components\";\n\nexport const CheckboxControl = function (props) {\n    const [checked, setChecked] = useState(props.checked || false);\n\n    let description;\n\n    if (props.unescapedDescription) {\n        // If using this option, the HTML has to be escaped before injected into the JS interface.\n        description = <p className=\"description\" dangerouslySetInnerHTML={{ __html: props.description }}></p>;\n    } else {\n        description = <p className=\"description\">{props.description}</p>;\n    }\n\n    const onChange = function (value) {\n        setChecked(value);\n\n        if (props.onChange) {\n            props.onChange(value);\n        }\n    };\n\n    return (\n        <Fragment>\n            <WPCheckboxControl\n                label={props.label}\n                name={props.name}\n                id={props.name}\n                className={props.className}\n                checked={checked || false}\n                onChange={onChange}\n            />\n\n            {description}\n        </Fragment>\n    )\n}\n","import { normalizeUnixTimeToMilliseconds } from \"../time\";\nimport { DateTimePicker as WPDateTimePicker } from \"&wp.components\";\n\n\nexport const DateTimePicker = ({currentDate, onChange, is12Hour, startOfWeek}) => {\n    if (typeof currentDate === 'number') {\n        currentDate = normalizeUnixTimeToMilliseconds(currentDate);\n    }\n\n    return (\n        <WPDateTimePicker\n            currentDate={currentDate}\n            onChange={onChange}\n            __nextRemoveHelpButton={true}\n            is12Hour={is12Hour}\n            startOfWeek={startOfWeek}\n        />\n    )\n}\n","import { compact } from '../utils';\nimport { ToggleCalendarDatePicker } from './ToggleCalendarDatePicker';\n\nconst { PanelRow, CheckboxControl, SelectControl, FormTokenField, Spinner, BaseControl } = wp.components;\nconst { Fragment, useEffect, useState } = wp.element;\nconst { decodeEntities } = wp.htmlEntities;\nconst { addQueryArgs } = wp.url;\nconst {\n    useSelect,\n    useDispatch\n} = wp.data;\nconst { apiFetch } = wp;\n\nexport const FutureActionPanel = (props) => {\n    const action = useSelect((select) => select(props.storeName).getAction(), []);\n    const date = useSelect((select) => select(props.storeName).getDate(), []);\n    const enabled = useSelect((select) => select(props.storeName).getEnabled(), []);\n    const terms = useSelect((select) => select(props.storeName).getTerms(), []);\n    const taxonomy = useSelect((select) => select(props.storeName).getTaxonomy(), []);\n    const taxonomyName = useSelect((select) => select(props.storeName).getTaxonomyName(), []);\n    const termsListByName = useSelect((select) => select(props.storeName).getTermsListByName(), []);\n    const termsListById = useSelect((select) => select(props.storeName).getTermsListById(), []);\n    const isFetchingTerms = useSelect((select) => select(props.storeName).getIsFetchingTerms(), []);\n    const calendarIsVisible = useSelect((select) => select(props.storeName).getCalendarIsVisible(), []);\n    const hasValidData = useSelect((select) => select(props.storeName).getHasValidData(), []);\n    const newStatus = useSelect((select) => select(props.storeName).getNewStatus(), []);\n\n    const [validationError, setValidationError] = useState('');\n\n    const {\n        setAction,\n        setDate,\n        setEnabled,\n        setTerms,\n        setTaxonomy,\n        setTermsListByName,\n        setTermsListById,\n        setTaxonomyName,\n        setIsFetchingTerms,\n        setCalendarIsVisible,\n        setHasValidData,\n        setNewStatus\n    } = useDispatch(props.storeName);\n\n    const mapTermsListById = (terms) => {\n        if (typeof terms !== 'object' || terms === null) {\n            return {};\n        }\n\n        return terms.map((term) => {\n            return termsListById[term];\n        });\n    }\n\n    const insertTerm = (term) => {\n        termsListByName[term] = {id: term, count: 0, description: \"\", link: \"\", name: term, slug: term, taxonomy: taxonomy};\n        termsListById[term] = term;\n        setTermsListByName(termsListByName);\n        setTermsListById(termsListById);\n        setTerms([...terms, term]);\n\n    }\n\n    const mapTermsListByName = (terms) => {\n        if (typeof terms !== 'object' || terms === null) {\n            return {};\n        }\n\n        return terms.map((term) => {\n            if (termsListByName[term]) {\n                return termsListByName[term].id;\n            }\n\n            insertTerm(term);\n\n            return term;\n        });\n    }\n\n    const callOnChangeData = (attribute, value) => {\n        if (typeof props.onChangeData === 'function') {\n            props.onChangeData(attribute, value);\n        }\n    }\n\n    const handleEnabledChange = (isChecked) => {\n        setEnabled(isChecked);\n\n        if (isChecked) {\n            setAction(props.action);\n            setDate(props.date);\n            setNewStatus(props.newStatus);\n            setTerms(props.terms);\n            setTaxonomy(props.taxonomy);\n\n            fetchTerms();\n        }\n\n        callOnChangeData('enabled', isChecked);\n    }\n\n    const handleActionChange = (value) => {\n        setAction(value);\n\n        callOnChangeData('action', value);\n    }\n\n    const handleNewStatusChange = (value) => {\n        setNewStatus(value);\n\n        callOnChangeData('newStatus', value);\n    }\n\n    const handleDateChange = (value) => {\n        setDate(value);\n\n        callOnChangeData('date', value);\n    }\n\n    const handleTermsChange = (value) => {\n        value = mapTermsListByName(value);\n\n        setTerms(value);\n\n        callOnChangeData('terms', value);\n    }\n\n    const fetchTerms = () => {\n        let termsListByName = {};\n        let termsListById = {};\n\n        if (!taxonomy) {\n            return;\n        }\n\n        setIsFetchingTerms(true);\n\n        apiFetch({\n            path: addQueryArgs(`publishpress-future/v1/terms/${taxonomy}`),\n        }).then((result) => {\n            result.terms.forEach(term => {\n                termsListByName[decodeEntities(term.name)] = term;\n                termsListById[term.id] = decodeEntities(term.name);\n            });\n\n            setTermsListByName(termsListByName);\n            setTermsListById(termsListById);\n            setTaxonomyName(decodeEntities(result.taxonomyName));\n            setIsFetchingTerms(false);\n        });\n    }\n\n    const storeCalendarIsVisibleOnStorage = (value) => {\n        localStorage.setItem('FUTURE_ACTION_CALENDAR_IS_VISIBLE_' + props.context, value ? '1' : '0');\n    }\n\n    const getCalendarIsVisibleFromStorage = () => {\n        return localStorage.getItem('FUTURE_ACTION_CALENDAR_IS_VISIBLE_' + props.context);\n    }\n\n    useEffect(() => {\n        if (props.autoEnableAndHideCheckbox)  {\n            setEnabled(true);\n        } else {\n            setEnabled(props.enabled);\n        }\n\n        setAction(props.action);\n        setNewStatus(props.newStatus);\n        setDate(props.date);\n        setTerms(props.terms);\n        setTaxonomy(props.taxonomy);\n\n        if (getCalendarIsVisibleFromStorage() === null) {\n            setCalendarIsVisible(props.calendarIsVisible);\n        } else {\n            setCalendarIsVisible(getCalendarIsVisibleFromStorage() === '1');\n        }\n\n        // We need to get the value directly from the props because the value from the store is not updated yet\n        if (props.enabled) {\n            if (props.isCleanNewPost) {\n                // Force populate the default values\n                handleEnabledChange(true);\n            }\n\n            fetchTerms();\n        }\n    }, []);\n\n    useEffect(() => {\n        storeCalendarIsVisibleOnStorage(calendarIsVisible);\n    }, [calendarIsVisible]);\n\n    useEffect(() => {\n        if (hasValidData && props.onDataIsValid) {\n            props.onDataIsValid();\n        }\n\n        if (! hasValidData && props.onDataIsInvalid) {\n            props.onDataIsInvalid();\n        }\n    }, [hasValidData]);\n\n    let selectedTerms = [];\n    if (terms && terms.length > 0 && termsListById) {\n        selectedTerms = compact(mapTermsListById(terms));\n\n        if (typeof selectedTerms === 'string') {\n            selectedTerms = [];\n        }\n    }\n\n    let termsListByNameKeys = [];\n    if (typeof termsListByName === 'object' && termsListByName !== null) {\n        termsListByNameKeys = Object.keys(termsListByName);\n    }\n\n    const panelClass = calendarIsVisible ? 'future-action-panel' : 'future-action-panel hidden-calendar';\n    const contentPanelClass = calendarIsVisible ? 'future-action-panel-content' : 'future-action-panel-content hidden-calendar';\n    const datePanelClass = calendarIsVisible ? 'future-action-date-panel' : 'future-action-date-panel hidden-calendar';\n\n    let is24hour;\n    if (props.timeFormat === 'inherited') {\n        is24hour = ! props.is12Hour;\n    } else {\n        is24hour = props.timeFormat === '24h';\n    }\n\n    const replaceCurlyBracketsWithLink = (string, href, target) => {\n        const parts = string.split('{');\n        const result = [];\n\n        result.push(parts.shift());\n\n        for (const part of parts) {\n            const [before, after] = part.split('}');\n\n            result.push(\n                <a href={href} target={target} key={href}>{before}</a>\n            );\n\n            result.push(after);\n        }\n\n        return result;\n    };\n\n    // Remove items from actions list if related to taxonomies and there is no taxonmoy for the post type\n    let actionsSelectOptions = props.actionsSelectOptions;\n    if (! props.taxonomy) {\n        actionsSelectOptions = props.actionsSelectOptions.filter((item) => {\n            return ['category', 'category-add', 'category-remove', 'category-remove-all'].indexOf(item.value) === -1;\n        });\n    }\n\n    const HelpText = replaceCurlyBracketsWithLink(props.strings.timezoneSettingsHelp, '/wp-admin/options-general.php#timezone_string', '_blank');\n    const displayTaxonomyField = String(action).includes('category') && action !== 'category-remove-all';\n\n    let termsFieldLabel = taxonomyName;\n    switch (action) {\n        case 'category':\n            termsFieldLabel = props.strings.newTerms.replace('%s', taxonomyName);\n            break;\n        case 'category-remove':\n            termsFieldLabel = props.strings.removeTerms.replace('%s', taxonomyName);\n            break;\n        case 'category-add':\n            termsFieldLabel = props.strings.addTerms.replace('%s', taxonomyName);\n            break;\n    }\n\n    const validateData = () => {\n        let valid = true;\n\n        if (! enabled) {\n            setValidationError('');\n            return true;\n        }\n\n        if (! action) {\n            setValidationError(props.strings.errorActionRequired);\n            valid = false;\n        }\n\n        if (! date) {\n            setValidationError(props.strings.errorDateRequired);\n            valid = false;\n        }\n\n        // Check if the date is in the past\n        if (date && new Date(date) < new Date()) {\n            setValidationError(props.strings.errorDateInPast);\n            valid = false;\n        }\n\n        const isTermRequired = ['category', 'category-add', 'category-remove'].includes(action);\n        const noTermIsSelected = terms.length === 0 || (terms.length === 1 && (terms[0] === '' || terms[0] === '0'));\n\n        if (isTermRequired && noTermIsSelected) {\n            setValidationError(props.strings.errorTermsRequired);\n            valid = false;\n        }\n\n        if (valid) {\n            setValidationError('');\n        }\n\n        return valid;\n    }\n\n    useEffect(() => {\n        if (! enabled) {\n            setHasValidData(true);\n            setValidationError('');\n\n            return;\n        }\n\n        setHasValidData(validateData());\n    }, [action, date, enabled, terms, taxonomy]);\n\n    // This adds a 'cancel' class to the input when the user clicks on the\n    // field to prevent the form from being submitted. This is a workaround\n    // for the issue on the quick-edit form where the form is submitted when\n    // the user presses the 'Enter' key trying to add a term to the field.\n    const forceIgnoreAutoSubmitOnEnter = (e) => {\n        jQuery(e.target).addClass('cancel');\n    }\n\n    return (\n        <div className={panelClass}>\n            {props.autoEnableAndHideCheckbox && (\n                <input type=\"hidden\" name={'future_action_enabled'} value={1} />\n            )}\n\n            {! props.autoEnableAndHideCheckbox && (\n                <PanelRow>\n                    <CheckboxControl\n                        label={props.strings.enablePostExpiration}\n                        checked={enabled || false}\n                        onChange={handleEnabledChange}\n                    />\n                </PanelRow>\n            )}\n\n            {enabled && (\n                <Fragment>\n                    <PanelRow className={contentPanelClass + ' future-action-full-width'}>\n                        <SelectControl\n                            label={props.strings.action}\n                            value={action}\n                            options={actionsSelectOptions}\n                            onChange={handleActionChange}\n                        />\n                    </PanelRow>\n\n                    {action === 'change-status' &&\n                        <PanelRow className=\"new-status\">\n                            <SelectControl\n                                label={props.strings.newStatus}\n                                options={props.statusesSelectOptions}\n                                value={newStatus}\n                                onChange={handleNewStatusChange}\n                            />\n                        </PanelRow>\n                    }\n\n                    {\n                        displayTaxonomyField && (\n                            isFetchingTerms && (\n                                <PanelRow>\n                                    <BaseControl label={taxonomyName}>\n                                        {`${props.strings.loading} (${taxonomyName})`}\n                                        <Spinner />\n                                    </BaseControl>\n                                </PanelRow>\n                            )\n                            || (!taxonomy && (\n                                <PanelRow>\n                                    <BaseControl label={taxonomyName} className=\"future-action-warning\">\n                                        <div>\n                                            <i className=\"dashicons dashicons-warning\"></i> {props.strings.noTaxonomyFound}\n                                        </div>\n                                    </BaseControl>\n                                </PanelRow>\n                            )\n                                || (\n                                    termsListByNameKeys.length === 0 && (\n                                        <PanelRow>\n                                            <BaseControl label={taxonomyName} className=\"future-action-warning\">\n                                                <div>\n                                                    <i className=\"dashicons dashicons-warning\"></i> {props.strings.noTermsFound}\n                                                </div>\n                                            </BaseControl>\n                                        </PanelRow>\n                                    )\n                                    || (\n                                        <PanelRow className=\"future-action-full-width\">\n                                            <BaseControl>\n                                                <FormTokenField\n                                                    label={termsFieldLabel}\n                                                    value={selectedTerms}\n                                                    suggestions={termsListByNameKeys}\n                                                    onChange={handleTermsChange}\n                                                    placeholder={props.strings.addTermsPlaceholder}\n                                                    maxSuggestions={1000}\n                                                    onFocus={forceIgnoreAutoSubmitOnEnter}\n                                                    __experimentalExpandOnFocus={true}\n                                                    __experimentalAutoSelectFirstMatch={true}\n                                                />\n                                            </BaseControl>\n                                        </PanelRow>\n                                    )\n                                )\n                            )\n                        )\n                    }\n\n                    <PanelRow className={datePanelClass}>\n                        <ToggleCalendarDatePicker\n                            currentDate={date}\n                            onChangeDate={handleDateChange}\n                            onToggleCalendar={() => setCalendarIsVisible(!calendarIsVisible)}\n                            is12Hour={!is24hour}\n                            startOfWeek={props.startOfWeek}\n                            isExpanded={calendarIsVisible}\n                            strings={props.strings}\n                        />\n                    </PanelRow>\n\n                    <PanelRow>\n                        <div className=\"future-action-help-text\">\n                            <hr />\n\n                            <span className=\"dashicons dashicons-info\"></span> {HelpText}\n                        </div>\n                    </PanelRow>\n\n                    {! hasValidData && (\n                        <PanelRow>\n                            <BaseControl label={props.strings.validationError} className=\"future-action-error\">\n                                <div>\n                                    <i className=\"dashicons dashicons-warning\"></i> {validationError}\n                                </div>\n                            </BaseControl>\n                        </PanelRow>\n                    )}\n                </Fragment>\n            )}\n        </div>\n    );\n};\n","import { FutureActionPanel } from './';\n\nexport const FutureActionPanelBlockEditor = (props) => {\n    const { PluginDocumentSettingPanel } = wp.editPost;\n    const { useDispatch, select } = wp.data;\n\n    const { editPost } = useDispatch('core/editor');\n\n    const editPostAttribute = (newAttribute) => {\n        const attribute = {\n            publishpress_future_action: {}\n        };\n\n        // For each property on newAttribute, set the value on attribute\n        for (const [name, value] of Object.entries(newAttribute)) {\n            attribute.publishpress_future_action[name] = value;\n        }\n\n        editPost(attribute);\n    }\n\n    const onChangeData = (attribute, value) => {\n        const store = select(props.storeName);\n\n        const newAttribute = {\n            'enabled': store.getEnabled()\n        }\n\n        if (newAttribute.enabled) {\n            newAttribute['action'] = store.getAction();\n            newAttribute['newStatus'] = store.getNewStatus();\n            newAttribute['date'] = store.getDate();\n            newAttribute['terms'] = store.getTerms();\n            newAttribute['taxonomy'] = store.getTaxonomy();\n        }\n\n        editPostAttribute(newAttribute);\n    }\n\n    const data = select('core/editor').getEditedPostAttribute('publishpress_future_action');\n\n    const { lockPostSaving, unlockPostSaving } = useDispatch('core/editor');\n\n    const onDataIsValid = () => {\n        unlockPostSaving('future-action');\n    }\n\n    const onDataIsInvalid = () => {\n        lockPostSaving('future-action');\n    }\n\n    return (\n        <PluginDocumentSettingPanel\n            name={'publishpress-future-action-panel'}\n            title={props.strings.panelTitle}\n            icon=\"calendar\"\n            initialOpen={props.postTypeDefaultConfig.autoEnable}\n            className={'post-expirator-panel'}>\n            <div id='publishpress-future-block-editor'>\n                <FutureActionPanel\n                    context={'block-editor'}\n                    postType={props.postType}\n                    isCleanNewPost={props.isCleanNewPost}\n                    actionsSelectOptions={props.actionsSelectOptions}\n                    statusesSelectOptions={props.statusesSelectOptions}\n                    enabled={data.enabled}\n                    calendarIsVisible={true}\n                    action={data.action}\n                    newStatus={data.newStatus}\n                    date={data.date}\n                    terms={data.terms}\n                    taxonomy={data.taxonomy}\n                    taxonomyName={props.taxonomyName}\n                    onChangeData={onChangeData}\n                    is12Hour={props.is12Hour}\n                    timeFormat={props.timeFormat}\n                    startOfWeek={props.startOfWeek}\n                    storeName={props.storeName}\n                    strings={props.strings}\n                    onDataIsValid={onDataIsValid}\n                    onDataIsInvalid={onDataIsInvalid} />\n            </div>\n        </PluginDocumentSettingPanel>\n    );\n};\n","import { FutureActionPanel, SelectControl } from '.';\nimport { getElementByName } from '../utils';\n\nexport const FutureActionPanelBulkEdit = (props) => {\n    const { useSelect, useDispatch, select } = wp.data;\n    const { useEffect } = wp.element;\n\n    const onChangeData = (attribute, value) => {\n        getElementByName('future_action_bulk_enabled').value = select(props.storeName).getEnabled() ? 1 : 0;\n        getElementByName('future_action_bulk_action').value = select(props.storeName).getAction();\n        getElementByName('future_action_bulk_new_status').value = select(props.storeName).getNewStatus();\n        getElementByName('future_action_bulk_date').value = select(props.storeName).getDate();\n        getElementByName('future_action_bulk_terms').value = select(props.storeName).getTerms().join(',');\n        getElementByName('future_action_bulk_taxonomy').value = select(props.storeName).getTaxonomy();\n    }\n\n    const date = useSelect((select) => select(props.storeName).getDate(), []);\n    const enabled = useSelect((select) => select(props.storeName).getEnabled(), []);\n    const action = useSelect((select) => select(props.storeName).getAction(), []);\n    const newStatus = useSelect((select) => select(props.storeName).getNewStatus(), []);\n    const terms = useSelect((select) => select(props.storeName).getTerms(), []);\n    const taxonomy = useSelect((select) => select(props.storeName).getTaxonomy(), []);\n    const changeAction = useSelect((select) => select(props.storeName).getChangeAction(), []);\n    const hasValidData = useSelect((select) => select(props.storeName).getHasValidData(), []);\n\n    const {\n        setChangeAction\n    } = useDispatch(props.storeName);\n\n    let termsString = terms;\n    if (typeof terms === 'object') {\n        termsString = terms.join(',');\n    }\n\n    const handleStrategyChange = (value) => {\n        setChangeAction(value);\n    };\n\n    const options = [\n        { value: 'no-change', label: props.strings.noChange },\n        { value: 'change-add', label: props.strings.changeAdd },\n        { value: 'add-only', label: props.strings.addOnly },\n        { value: 'change-only', label: props.strings.changeOnly },\n        { value: 'remove-only', label: props.strings.removeOnly },\n    ];\n\n    const optionsToDisplayPanel = ['change-add', 'add-only', 'change-only'];\n\n    useEffect(() => {\n        // We are not using onDataIsValid and onDataIsInvalid because we need to enable/disable the button\n        // also based on the changeAction value.\n        if (hasValidData || changeAction === 'no-change') {\n            jQuery('#bulk_edit').prop('disabled', false);\n        } else {\n            jQuery('#bulk_edit').prop('disabled', true);\n        }\n    }, [hasValidData, changeAction]);\n\n    return (\n        <div className={'post-expirator-panel'}>\n            <SelectControl\n                label={props.strings.futureActionUpdate}\n                name={'future_action_bulk_change_action'}\n                value={changeAction}\n                options={options}\n                onChange={handleStrategyChange}\n            />\n\n            {optionsToDisplayPanel.includes(changeAction) && (\n                <FutureActionPanel\n                    context={'bulk-edit'}\n                    autoEnableAndHideCheckbox={true}\n                    postType={props.postType}\n                    isCleanNewPost={props.isNewPost}\n                    actionsSelectOptions={props.actionsSelectOptions}\n                    statusesSelectOptions={props.statusesSelectOptions}\n                    enabled={true}\n                    calendarIsVisible={false}\n                    action={action}\n                    newStatus={newStatus}\n                    date={date}\n                    terms={terms}\n                    taxonomy={taxonomy}\n                    taxonomyName={props.taxonomyName}\n                    onChangeData={onChangeData}\n                    is12Hour={props.is12Hour}\n                    timeFormat={props.timeFormat}\n                    startOfWeek={props.startOfWeek}\n                    storeName={props.storeName}\n                    strings={props.strings} />\n            )}\n\n            {/* Bulk edit JS code will save only fields with name inside the edit row */}\n            <input type=\"hidden\" name={'future_action_bulk_enabled'} value={enabled ? 1 : 0} />\n            <input type=\"hidden\" name={'future_action_bulk_action'} value={action} />\n            <input type=\"hidden\" name={'future_action_bulk_new_status'} value={newStatus} />\n            <input type=\"hidden\" name={'future_action_bulk_date'} value={date} />\n            <input type=\"hidden\" name={'future_action_bulk_terms'} value={termsString} />\n            <input type=\"hidden\" name={'future_action_bulk_taxonomy'} value={taxonomy} />\n            <input type=\"hidden\" name={'future_action_bulk_view'} value=\"bulk-edit\" />\n            <input type=\"hidden\" name={'_future_action_nonce'} value={props.nonce} />\n        </div>\n    );\n};\n","import { FutureActionPanel } from \"./\";\nimport { select, useSelect } from \"&wp.data\";\nimport { useEffect } from \"&wp.element\";\n\nexport const FutureActionPanelClassicEditor = (props) => {\n    const browserTimezoneOffset = new Date().getTimezoneOffset();\n\n    const getElementByName = (name) => {\n        return document.getElementsByName(name)[0];\n    }\n\n    const onChangeData = (attribute, value) => {\n        const store = select(props.storeName);\n\n        getElementByName('future_action_enabled').value = store.getEnabled() ? 1 : 0;\n        getElementByName('future_action_action').value = store.getAction();\n        getElementByName('future_action_new_status').value = store.getNewStatus();\n        getElementByName('future_action_date').value = store.getDate();\n        getElementByName('future_action_terms').value = store.getTerms().join(',');\n        getElementByName('future_action_taxonomy').value = store.getTaxonomy();\n    }\n\n    const getTermsFromElementByName = (name) => {\n        const element = getElementByName(name);\n        if (!element) {\n            return [];\n        }\n\n        let terms = element.value.split(',');\n\n        if (terms.length === 1 && terms[0] === '') {\n            terms = [];\n        }\n\n        return terms.map(term => parseInt(term));\n    }\n\n    const getElementValueByName = (name) => {\n        const element = getElementByName(name);\n        if (!element) {\n            return '';\n        }\n\n        return element.value;\n    }\n\n    const data = {\n        enabled: getElementValueByName('future_action_enabled') === '1',\n        action: getElementValueByName('future_action_action'),\n        newStatus: getElementValueByName('future_action_new_status'),\n        date: getElementValueByName('future_action_date'),\n        terms: getTermsFromElementByName('future_action_terms'),\n        taxonomy: getElementValueByName('future_action_taxonomy'),\n    };\n\n    const onDataIsValid = () => {\n        jQuery('#publish').prop('disabled', false);\n    }\n\n    const onDataIsInvalid = () => {\n        jQuery('#publish').prop('disabled', true);\n    }\n\n    return (\n        <div className={'post-expirator-panel'}>\n            <FutureActionPanel\n                context={'classic-editor'}\n                postType={props.postType}\n                isCleanNewPost={props.isNewPost}\n                actionsSelectOptions={props.actionsSelectOptions}\n                statusesSelectOptions={props.statusesSelectOptions}\n                enabled={data.enabled}\n                calendarIsVisible={true}\n                action={data.action}\n                newStatus={data.newStatus}\n                date={data.date}\n                terms={data.terms}\n                taxonomy={data.taxonomy}\n                taxonomyName={props.taxonomyName}\n                onChangeData={onChangeData}\n                is12Hour={props.is12Hour}\n                timeFormat={props.timeFormat}\n                startOfWeek={props.startOfWeek}\n                storeName={props.storeName}\n                strings={props.strings}\n                onDataIsValid={onDataIsValid}\n                onDataIsInvalid={onDataIsInvalid} />\n        </div>\n    );\n};\n","import { FutureActionPanel } from './';\nimport { useSelect, select } from '&wp.data';\nimport { useEffect } from '&wp.element';\n\nexport const FutureActionPanelQuickEdit = (props) => {\n    const onChangeData = (attribute, value) => {};\n\n    const date = useSelect((select) => select(props.storeName).getDate(), []);\n    const enabled = useSelect((select) => select(props.storeName).getEnabled(), []);\n    const action = useSelect((select) => select(props.storeName).getAction(), []);\n    const terms = useSelect((select) => select(props.storeName).getTerms(), []);\n    const taxonomy = useSelect((select) => select(props.storeName).getTaxonomy(), []);\n    const hasValidData = useSelect((select) => select(props.storeName).getHasValidData(), []);\n    const newStatus = useSelect((select) => select(props.storeName).getNewStatus(), []);\n\n    let termsString = terms;\n    if (typeof terms === 'object') {\n        termsString = terms.join(',');\n    }\n\n    const onDataIsValid = () => {\n        jQuery('.button-primary.save').prop('disabled', false);\n    }\n\n    const onDataIsInvalid = () => {\n        jQuery('.button-primary.save').prop('disabled', true);\n    }\n\n    return (\n        <div className={'post-expirator-panel'}>\n            <FutureActionPanel\n                context={'quick-edit'}\n                postType={props.postType}\n                isCleanNewPost={props.isNewPost}\n                actionsSelectOptions={props.actionsSelectOptions}\n                statusesSelectOptions={props.statusesSelectOptions}\n                enabled={enabled}\n                calendarIsVisible={false}\n                action={action}\n                newStatus={newStatus}\n                date={date}\n                terms={terms}\n                taxonomy={taxonomy}\n                taxonomyName={props.taxonomyName}\n                onChangeData={onChangeData}\n                is12Hour={props.is12Hour}\n                timeFormat={props.timeFormat}\n                startOfWeek={props.startOfWeek}\n                storeName={props.storeName}\n                strings={props.strings}\n                onDataIsValid={onDataIsValid}\n                onDataIsInvalid={onDataIsInvalid} />\n\n            {/* Quick edit JS code will save only fields with name inside the edit row */}\n            <input type=\"hidden\" name={'future_action_enabled'} value={enabled ? 1 : 0} />\n            <input type=\"hidden\" name={'future_action_action'} value={action ? action : ''} />\n            <input type=\"hidden\" name={'future_action_new_status'} value={newStatus ? newStatus : ''} />\n            <input type=\"hidden\" name={'future_action_date'} value={date ? date : ''} />\n            <input type=\"hidden\" name={'future_action_terms'} value={termsString ? termsString : ''} />\n            <input type=\"hidden\" name={'future_action_taxonomy'} value={taxonomy ? taxonomy : ''} />\n            <input type=\"hidden\" name={'future_action_view'} value=\"quick-edit\" />\n            <input type=\"hidden\" name={'_future_action_nonce'} value={props.nonce} />\n        </div>\n    );\n};\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\nimport { Fragment } from \"&wp.element\";\n\nexport const NonceControl = function (props) {\n    if (! props.name) {\n        props.name = '_wpnonce';\n    }\n\n    if (! props.referrer) {\n        props.referrer = true;\n    }\n\n    return (\n        <Fragment>\n            <input type=\"hidden\" name={props.name} id={props.name} value={props.nonce} />\n\n            {props.referrer &&\n                <input type=\"hidden\" name=\"_wp_http_referer\" value={props.referrer}/>\n            }\n        </Fragment>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\n\nimport {\n    SettingRow,\n    SettingsFieldset,\n    SettingsTable,\n    SelectControl,\n    TextControl,\n    TokensControl,\n    CheckboxControl\n} from './';\nimport { useEffect, useState } from '&wp.element';\nimport { addQueryArgs } from '&wp.url';\nimport { applyFilters } from '&wp.hooks';\nimport { apiFetch } from '&wp';\n\nconst { PanelRow, BaseControl } = wp.components;\n\nvar apiRequestController = null;\n\nexport const PostTypeSettingsPanel = function (props) {\n    const originalExpireTypeList = props.expireTypeList[props.postType];\n\n    const [postTypeTaxonomy, setPostTypeTaxonomy] = useState(props.settings.taxonomy);\n    const [termOptions, setTermOptions] = useState([]);\n    const [termsSelectIsLoading, setTermsSelectIsLoading] = useState(false);\n    const [selectedTerms, setSelectedTerms] = useState([]);\n    const [settingHowToExpire, setSettingHowToExpire] = useState(props.settings.howToExpire);\n    const [isActive, setIsActive] = useState(props.settings.active);\n    const [expireOffset, setExpireOffset] = useState(props.settings.defaultExpireOffset);\n    const [emailNotification, setEmailNotification] = useState(props.settings.emailNotification);\n    const [isAutoEnabled, setIsAutoEnabled] = useState(props.settings.autoEnabled);\n    const [hasValidData, setHasValidData] = useState(false);\n    const [validationError, setValidationError] = useState('');\n    const [taxonomyLabel, setTaxonomyLabel] = useState('');\n    const [howToExpireList, setHowToExpireList] = useState(originalExpireTypeList);\n    const [newStatus, setNewStatus] = useState(props.settings.newStatus);\n    const [hasPendingValidation, setHasPendingValidation] = useState(false);\n\n    const taxonomyRelatedActions = [\n        'category',\n        'category-add',\n        'category-remove',\n        'category-remove-all'\n    ];\n\n    const onChangeTaxonomy = function (value) {\n        setPostTypeTaxonomy(value);\n    };\n\n    const onChangeTerms = (value) => {\n        setSelectedTerms(value);\n    };\n\n    const onChangeHowToExpire = (value) => {\n        setSettingHowToExpire(value);\n    }\n\n    const onChangeActive = (value) => {\n        setIsActive(value);\n    }\n\n    const onChangeExpireOffset = (value) => {\n        setExpireOffset(value);\n    }\n\n    const onChangeEmailNotification = (value) => {\n        setEmailNotification(value);\n    }\n\n    const onChangeAutoEnabled = (value) => {\n        setIsAutoEnabled(value);\n    }\n\n    const validateData = () => {\n        if (! isActive) {\n            setValidationError('');\n            return true;\n        }\n\n        if (expireOffset) {\n            if (apiRequestController) {\n                apiRequestController.abort();\n            }\n\n            apiRequestController = typeof AbortController === 'undefined' ? undefined : new AbortController();\n            const signal = apiRequestController ? apiRequestController.signal : undefined;\n            setHasPendingValidation(true);\n\n            apiFetch({\n                path: addQueryArgs(`publishpress-future/v1/settings/validate-expire-offset`),\n                method: 'POST',\n                data: {\n                    offset: expireOffset\n                },\n                signal: signal\n            }).then((result) => {\n                setHasPendingValidation(false);\n\n                setHasValidData(result.isValid);\n                setValidationError(result.message);\n            });\n        }\n\n        setValidationError('');\n        return true;\n    }\n\n    useEffect(() => {\n        // Remove items from expireTypeList if related to taxonomies and there is no taxonmoy for the post type\n        if (props.taxonomiesList.length === 0) {\n            let newExpireTypeList = [];\n\n            newExpireTypeList = howToExpireList.filter((item) => {\n                return taxonomyRelatedActions.indexOf(item.value) === -1;\n            });\n\n            setHowToExpireList(newExpireTypeList);\n        }\n    }, []);\n\n    useEffect(() => {\n        if (!postTypeTaxonomy || !props.taxonomiesList) {\n            return;\n        }\n\n        setTermsSelectIsLoading(true);\n        apiFetch({\n            path: addQueryArgs(`publishpress-future/v1/terms/${postTypeTaxonomy}`),\n        }).then((result) => {\n            let options = [];\n\n            let settingsTermsOptions = null;\n            let option;\n\n            result.terms.forEach(term => {\n                option = { value: term.id, label: term.name };\n                options.push(option);\n\n                if (postTypeTaxonomy === props.settings.taxonomy && props.settings.terms.includes(term.id)) {\n                    if (settingsTermsOptions === null) {\n                        settingsTermsOptions = [];\n                    }\n\n                    settingsTermsOptions.push(option.label);\n                }\n            });\n\n            setTermOptions(options);\n            setSelectedTerms(settingsTermsOptions);\n            setTermsSelectIsLoading(false);\n        });\n\n        props.taxonomiesList.forEach((taxonomy) => {\n            if (taxonomy.value === postTypeTaxonomy) {\n                setTaxonomyLabel(taxonomy.label);\n            }\n        });\n    }, [postTypeTaxonomy]);\n\n    useEffect(() => {\n        setHasValidData(validateData());\n    }, [isActive, postTypeTaxonomy, selectedTerms, settingHowToExpire, taxonomyLabel, expireOffset]);\n\n    useEffect(() => {\n        if (!taxonomyLabel) {\n            return;\n        }\n\n        // Update the list of actions replacing the taxonomy name.\n        let newExpireTypeList = [];\n\n        originalExpireTypeList.forEach((expireType) => {\n            let label = expireType.label;\n\n            if (taxonomyRelatedActions.indexOf(expireType.value) !== -1) {\n                label = label.replace('%s', taxonomyLabel.toLowerCase());\n            }\n\n            newExpireTypeList.push({\n                value: expireType.value,\n                label: label\n            });\n        });\n\n        setHowToExpireList(newExpireTypeList);\n    }, [taxonomyLabel]);\n\n    useEffect(() => {\n        if (hasValidData && props.onDataIsValid) {\n            props.onDataIsValid(props.postType);\n        }\n\n        if (!hasValidData && props.onDataIsInvalid) {\n            props.onDataIsInvalid(props.postType);\n        }\n    }, [hasValidData]);\n\n    useEffect(() => {\n        if (hasPendingValidation && props.onValidationStarted) {\n            props.onValidationStarted(props.postType);\n        }\n\n        if (!hasPendingValidation && props.onValidationFinished) {\n            props.onValidationFinished(props.postType);\n        }\n    }, [hasPendingValidation]);\n\n    const termOptionsLabels = termOptions.map((term) => term.label);\n\n    let settingsRows = [\n        <SettingRow label={props.text.fieldActive} key={'expirationdate_activemeta-' + props.postType}>\n            <CheckboxControl\n                name={'expirationdate_activemeta-' + props.postType}\n                checked={isActive || false}\n                label={props.text.fieldActiveLabel}\n                onChange={onChangeActive}\n            />\n        </SettingRow>\n    ];\n\n    if (isActive) {\n        settingsRows.push(\n            <SettingRow label={props.text.fieldAutoEnable} key={'expirationdate_autoenable-' + props.postType}>\n                <CheckboxControl\n                    name={'expirationdate_autoenable-' + props.postType}\n                    checked={isAutoEnabled || false}\n                    label={props.text.fieldAutoEnableLabel}\n                    onChange={onChangeAutoEnabled}\n                />\n            </SettingRow>\n        );\n\n        settingsRows.push(\n            <SettingRow label={props.text.fieldTaxonomy} key={'expirationdate_taxonomy-' + props.postType}>\n                <SelectControl\n                    name={'expirationdate_taxonomy-' + props.postType}\n                    options={props.taxonomiesList}\n                    selected={postTypeTaxonomy}\n                    noItemFoundMessage={props.text.noItemsfound}\n                    description={props.text.fieldTaxonomyDescription}\n                    data={props.postType}\n                    onChange={onChangeTaxonomy}\n                >\n                </SelectControl>\n            </SettingRow>\n        );\n\n        settingsRows.push(\n            <SettingRow label={props.text.fieldHowToExpire} key={'expirationdate_expiretype-' + props.postType}>\n                <SelectControl\n                    name={'expirationdate_expiretype-' + props.postType}\n                    className={'pe-howtoexpire'}\n                    options={howToExpireList}\n                    description={props.text.fieldHowToExpireDescription}\n                    selected={settingHowToExpire}\n                    onChange={onChangeHowToExpire}\n                />\n\n                {settingHowToExpire === 'change-status' &&\n                    <SelectControl\n                        name={'expirationdate_newstatus-' + props.postType}\n                        options={props.statusesList}\n                        selected={newStatus}\n                        onChange={setNewStatus}\n                    />\n                }\n\n                {(props.taxonomiesList.length > 0 && (['category', 'category-add', 'category-remove'].indexOf(settingHowToExpire) > -1)) &&\n                    <TokensControl\n                        label={props.text.fieldTerm}\n                        name={'expirationdate_terms-' + props.postType}\n                        options={termOptionsLabels}\n                        value={selectedTerms}\n                        isLoading={termsSelectIsLoading}\n                        onChange={onChangeTerms}\n                        description={props.text.fieldTermDescription}\n                        maxSuggestions={1000}\n                        expandOnFocus={true}\n                        autoSelectFirstMatch={true}\n                    />\n                }\n            </SettingRow>\n        );\n\n        settingsRows.push(\n            <SettingRow label={props.text.fieldDefaultDateTimeOffset} key={'expired-custom-date-' + props.postType}>\n                <TextControl\n                    name={'expired-custom-date-' + props.postType}\n                    value={expireOffset}\n                    loading={hasPendingValidation}\n                    placeholder={props.settings.globalDefaultExpireOffset}\n                    description={props.text.fieldDefaultDateTimeOffsetDescription}\n                    unescapedDescription={true}\n                    onChange={onChangeExpireOffset}\n                />\n            </SettingRow>\n        );\n\n        settingsRows.push(\n            <SettingRow label={props.text.fieldWhoToNotify} key={'expirationdate_emailnotification-' + props.postType}>\n                <TextControl\n                    name={'expirationdate_emailnotification-' + props.postType}\n                    className=\"large-text\"\n                    value={emailNotification}\n                    description={props.text.fieldWhoToNotifyDescription}\n                    onChange={onChangeEmailNotification}\n                />\n            </SettingRow>\n        );\n    }\n\n    settingsRows = applyFilters('expirationdate_settings_posttype', settingsRows, props, isActive, useState);\n\n    return (\n        <SettingsFieldset legend={props.legend}>\n            <SettingsTable bodyChildren={settingsRows} />\n\n            {! hasValidData && (\n                <PanelRow>\n                    <BaseControl label={props.text.validationError} className=\"future-action-error\">\n                        <div>\n                            <i className=\"dashicons dashicons-warning\"></i> {validationError}\n                        </div>\n                    </BaseControl>\n                </PanelRow>\n            )}\n        </SettingsFieldset>\n    );\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\n\nimport { PostTypeSettingsPanel } from \"./\";\n\nexport const PostTypesSettingsPanels = function (props) {\n    let panels = [];\n\n    for (const [postType, postTypeSettings] of Object.entries(props.settings)) {\n        panels.push(\n            <PostTypeSettingsPanel\n                legend={postTypeSettings.label}\n                text={props.text}\n                postType={postType}\n                settings={postTypeSettings}\n                expireTypeList={props.expireTypeList}\n                taxonomiesList={props.taxonomiesList[postType]}\n                statusesList={props.statusesList[postType]}\n                key={`${postType}-panel`}\n                onDataIsValid={props.onDataIsValid}\n                onDataIsInvalid={props.onDataIsInvalid}\n                onValidationStarted={props.onValidationStarted}\n                onValidationFinished={props.onValidationFinished}\n            />\n        );\n    }\n\n    return (panels);\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\nimport { Fragment } from \"&wp.element\";\nimport { SelectControl as WPSelectControl } from \"&wp.components\";\n\nexport const SelectControl = function (props) {\n    const onChange = (value) => {\n        props.onChange(value);\n    };\n\n    return (\n        <Fragment>\n            {props.options.length === 0 && (\n                <div>{props.noItemFoundMessage}</div>\n            )}\n\n            {props.options.length > 0 && (\n                <WPSelectControl\n                    label={props.label}\n                    name={props.name}\n                    id={props.name}\n                    className={props.className}\n                    value={props.selected}\n                    onChange={onChange}\n                    data-data={props.data}\n                    options={props.options}\n                />\n            )}\n\n            {props.children}\n\n            <p className=\"description\">{props.description}</p>\n        </Fragment>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\nimport { Fragment } from \"&wp.element\";\n\nexport const SettingRow = function (props) {\n    return (\n        <tr valign=\"top\">\n            <th scope=\"row\">\n                <label htmlFor=\"\">{props.label}</label>\n            </th>\n            <td>\n                {props.children}\n            </td>\n        </tr>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\n\nexport const SettingsFieldset = function (props) {\n    return (\n        <fieldset>\n                <legend>{props.legend}</legend>\n                {props.children}\n        </fieldset>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\n\nexport const SettingsForm = function (props) {\n    return (\n        <form method=\"post\">\n            {props.children}\n        </form>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\nimport { Fragment } from \"&wp.element\";\n\nexport const SettingsSection = function (props) {\n    return (\n        <Fragment>\n            <h2>{props.title}</h2>\n            <p>{props.description}</p>\n            {props.children}\n        </Fragment>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\n\nexport const SettingsTable = function (props) {\n    return (\n        <table className=\"form-table\">\n            <tbody>\n                {props.bodyChildren}\n            </tbody>\n        </table>\n    )\n}\n","/*\n * Copyright (c) 2024. PublishPress, All rights reserved.\n */\nexport const Spinner = function (props) {\n    return (\n        <span className=\"publishpress-future-spinner\"><div></div><div></div><div></div><div></div></span>\n    );\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\n\nexport const SubmitButton = function (props) {\n    return (\n        <input\n            type=\"submit\"\n            name={props.name}\n            value={props.text}\n            disabled={props.disabled}\n            className=\"button-primary\"\n        />\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\nimport { Fragment } from \"&wp.element\";\nimport { TextControl as WPTextControl } from \"&wp.components\";\nimport { Spinner } from \"./\";\n\nexport const TextControl = function (props) {\n    let description;\n\n    if (props.unescapedDescription) {\n        // If using this option, the HTML has to be escaped before injected into the JS interface.\n        description = <p className=\"description\" dangerouslySetInnerHTML={{ __html: props.description }}></p>;\n    } else {\n        description = <p className=\"description\">{props.description}</p>;\n    }\n\n    const onChange = function (value) {\n        if (props.onChange) {\n            props.onChange(value);\n        }\n    };\n\n    let className = props.className ? props.className : '';\n\n    if (props.loading) {\n        className += ' publishpress-future-loading publishpress-future-loading-input';\n    }\n\n    return (\n        <Fragment>\n            <div className={className}>\n                <WPTextControl\n                    type=\"text\"\n                    label={props.label}\n                    name={props.name}\n                    id={props.name}\n                    className={props.className}\n                    value={props.value}\n                    placeholder={props.placeholder}\n                    onChange={onChange}\n                />\n\n                {props.loading && <Spinner/>}\n\n                {description}\n            </div>\n        </Fragment>\n    )\n}\n","import { Button } from '&wp.components';\n\nexport const ToggleArrowButton = function (props) {\n    const onClick = function () {\n        if (props.onClick) {\n            props.onClick();\n        }\n    };\n\n    const iconExpanded = props.iconExpanded ? props.iconExpanded : 'arrow-up-alt2';\n    const iconCollapsed = props.iconCollapsed ? props.iconCollapsed : 'arrow-down-alt2';\n\n    const icon = props.isExpanded ? iconExpanded : iconCollapsed;\n\n    const title = props.isExpanded ? props.titleExpanded : props.titleCollapsed;\n\n    return (\n        <Button\n            isSmall\n            title={title}\n            icon={icon}\n            onClick={onClick}\n            className={props.className}\n        />\n    )\n}\n","import { ToggleArrowButton } from \"./ToggleArrowButton\";\nimport { DateTimePicker } from \"./DateTimePicker\";\nimport { Fragment, useEffect } from \"&wp.element\";\n\nexport const ToggleCalendarDatePicker = (\n    {\n        isExpanded,\n        strings,\n        onToggleCalendar,\n        currentDate,\n        onChangeDate,\n        is12Hour,\n        startOfWeek\n    }\n) => {\n    useEffect(() => {\n        // Move the element of the toggle button to between the time and date elements.\n        const toggleButtonElement = document.querySelector('.future-action-calendar-toggle');\n\n        if (! toggleButtonElement) {\n            return;\n        }\n\n        const dateTimeElement = toggleButtonElement.nextElementSibling;\n\n        if (! dateTimeElement) {\n            return;\n        }\n\n        const timeElement = dateTimeElement.querySelector('.components-datetime__time');\n\n        if (! timeElement) {\n            return;\n        }\n\n        const dateElement = timeElement.nextSibling;\n\n        if (! dateElement) {\n            return;\n        }\n\n        dateTimeElement.insertBefore(toggleButtonElement, dateElement)\n    });\n\n    return (\n        <Fragment>\n            <ToggleArrowButton\n                className=\"future-action-calendar-toggle\"\n                isExpanded={isExpanded}\n                iconExpanded=\"arrow-up-alt2\"\n                iconCollapsed=\"calendar\"\n                titleExpanded={strings.hideCalendar}\n                titleCollapsed={strings.showCalendar}\n                onClick={onToggleCalendar} />\n\n            <DateTimePicker\n                currentDate={currentDate}\n                onChange={onChangeDate}\n                __nextRemoveHelpButton={true}\n                is12Hour={is12Hour}\n                startOfWeek={startOfWeek}\n            />\n        </Fragment>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\nimport { Fragment, useState, useEffect } from \"&wp.element\";\nimport { FormTokenField } from \"&wp.components\";\n\nexport const TokensControl = (props) => {\n    const [stringValue, setStringValue] = useState('');\n\n    useEffect(() => {\n        if (props.value) {\n            setStringValue(props.value.join(','));\n        }\n    }, [props.value]);\n\n    let description;\n\n    if (props.description) {\n        if (props.unescapedDescription) {\n            // If using this option, the HTML has to be escaped before injected into the JS interface.\n            description = <p className=\"description\" dangerouslySetInnerHTML={{__html: props.description}}></p>;\n        } else {\n            description = <p className=\"description\">{props.description}</p>;\n        }\n    }\n\n    const onChange = (value) => {\n        if (props.onChange) {\n            props.onChange(value);\n        }\n\n        if (typeof value === 'object') {\n            setStringValue(value.join(','));\n        } else {\n            setStringValue('');\n        }\n    }\n\n    const value = props.value ? props.value : [];\n \n    return (\n        <Fragment>\n            <FormTokenField\n                label={props.label}\n                value={value}\n                suggestions={props.options}\n                onChange={onChange}\n                maxSuggestions={props.maxSuggestions}\n                className=\"publishpres-future-token-field\"\n                __experimentalExpandOnFocus={props.expandOnFocus}\n                __experimentalAutoSelectFirstMatch={props.autoSelectFirstMatch}\n            />\n            <input type=\"hidden\" name={props.name} value={stringValue} />\n\n            {description}\n        </Fragment>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\n\nexport const TrueFalseControl = function (props) {\n    const { Fragment } = wp.element;\n\n    const onChange = (e) => {\n        if (props.onChange) {\n            props.onChange(\n                e.target.value === props.trueValue && jQuery(e.target).is(':checked')\n            );\n            // Check only the true radio... using the field name? or directly the ID\n        }\n    };\n\n    return (\n        <Fragment>\n            <input\n                type=\"radio\"\n                name={props.name}\n                id={props.name + '-true'}\n                value={props.trueValue}\n                defaultChecked={props.selected}\n                onChange={onChange}\n            />\n\n            <label htmlFor={props.name + '-true'}>{props.trueLabel}</label>\n            &nbsp;&nbsp;\n            <input\n                type=\"radio\"\n                name={props.name}\n                defaultChecked={!props.selected}\n                id={props.name + '-false'}\n                value={props.falseValue}\n                onChange={onChange}\n            />\n            <label\n                htmlFor={props.name + '-false'}>{props.falseLabel}</label>\n\n            <p className=\"description\">{props.description}</p>\n        </Fragment>\n    )\n}\n","export { ButtonsPanel } from \"./ButtonsPanel\";\nexport { FutureActionPanel } from \"./FutureActionPanel\";\nexport { FutureActionPanelBlockEditor } from \"./FutureActionPanelBlockEditor\";\nexport { FutureActionPanelClassicEditor } from \"./FutureActionPanelClassicEditor\";\nexport { FutureActionPanelQuickEdit } from \"./FutureActionPanelQuickEdit\";\nexport { FutureActionPanelBulkEdit } from \"./FutureActionPanelBulkEdit\";\nexport { PostTypeSettingsPanel } from \"./PostTypeSettingsPanel\";\nexport { PostTypesSettingsPanels } from \"./PostTypesSettingsPanels\";\nexport { SettingRow } from \"./SettingRow\";\nexport { SettingsFieldset } from \"./SettingsFieldset\";\nexport { SettingsForm } from \"./SettingsForm\";\nexport { SettingsSection } from \"./SettingsSection\";\nexport { SettingsTable } from \"./SettingsTable\";\nexport { SubmitButton } from \"./SubmitButton\";\nexport { CheckboxControl } from \"./CheckboxControl\";\nexport { SelectControl } from \"./SelectControl\";\nexport { TextControl } from \"./TextControl\";\nexport { TokensControl } from \"./TokensControl\";\nexport { NonceControl } from \"./NonceControl\";\nexport { TrueFalseControl } from \"./TrueFalseControl\";\nexport { Spinner } from \"./Spinner\";\n","import { formatUnixTimeToTimestamp, getCurrentTimeAsTimestamp, normalizeUnixTimeToSeconds } from './time';\nimport { isNumber } from './utils';\nimport { register, createReduxStore } from '&wp.data';\n\nexport const createStore = (props) => {\n    if (props.defaultState.terms && typeof props.defaultState.terms === 'string') {\n        props.defaultState.terms = props.defaultState.terms.split(',').map(term => parseInt(term));\n    }\n\n    let defaultState = {\n        action: props.defaultState.action,\n        date: props.defaultState.date ? props.defaultState.date : getCurrentTimeAsTimestamp(),\n        enabled: props.defaultState.autoEnable,\n        terms: props.defaultState.terms ? props.defaultState.terms : [],\n        taxonomy: props.defaultState.taxonomy ? props.defaultState.taxonomy : null,\n        newStatus: props.defaultState.newStatus ? props.defaultState.newStatus : 'draft',\n        termsListByName: null,\n        termsListById: null,\n        taxonomyName: null,\n        isFetchingTerms: false,\n        changeAction: 'no-change',\n        calendarIsVisible: true,\n        hasValidData: true,\n    }\n\n    const store = createReduxStore(props.name, {\n        reducer(state = defaultState, action) {\n            switch (action.type) {\n                case 'SET_ACTION':\n                    return {\n                        ...state,\n                        action: action.action,\n                    };\n                case 'SET_NEW_STATUS':\n                    return {\n                        ...state,\n                        newStatus: action.newStatus,\n                    };\n                case 'SET_DATE':\n                    // Make sure the date is a number, if it is a string with only numbers\n                    if (typeof action.date !== 'number' && isNumber(action.date)) {\n                        action.date = parseInt(action.date);\n                    }\n\n                    // If string, convert to unix time\n                    if (typeof action.date === 'string') {\n                        action.date = new Date(action.date).getTime();\n                    }\n\n                    // Make sure the time is always in seconds\n                    action.date = normalizeUnixTimeToSeconds(action.date);\n\n                    // Convert to formated string format, considering it is in the site's timezone\n                    action.date = formatUnixTimeToTimestamp(action.date);\n\n                    return {\n                        ...state,\n                        date: action.date,\n                    }\n                case 'SET_ENABLED':\n                    return {\n                        ...state,\n                        enabled: action.enabled,\n                    }\n                case 'SET_TERMS':\n                    return {\n                        ...state,\n                        terms: action.terms,\n                    }\n                case 'SET_TAXONOMY':\n                    return {\n                        ...state,\n                        taxonomy: action.taxonomy,\n                    }\n                case 'SET_TERMS_LIST_BY_NAME':\n                    return {\n                        ...state,\n                        termsListByName: action.termsListByName,\n                    }\n                case 'SET_TERMS_LIST_BY_ID':\n                    return {\n                        ...state,\n                        termsListById: action.termsListById,\n                    }\n                case 'SET_TAXONOMY_NAME':\n                    return {\n                        ...state,\n                        taxonomyName: action.taxonomyName,\n                    }\n                case 'SET_CHANGE_ACTION':\n                    return {\n                        ...state,\n                        changeAction: action.changeAction,\n                    }\n                case 'SET_CALENDAR_IS_VISIBLE':\n                    return {\n                        ...state,\n                        calendarIsVisible: action.calendarIsVisible,\n                    }\n                case 'SET_HAS_VALID_DATA':\n                    return {\n                        ...state,\n                        hasValidData: action.hasValidData,\n                    }\n            }\n\n            return state;\n        },\n        actions: {\n            setAction(action) {\n                return {\n                    type: 'SET_ACTION',\n                    action: action\n                };\n            },\n            setNewStatus(newStatus) {\n                return {\n                    type: 'SET_NEW_STATUS',\n                    newStatus: newStatus\n                };\n            },\n            setDate(date) {\n                return {\n                    type: 'SET_DATE',\n                    date: date\n                };\n            },\n            setEnabled(enabled) {\n                return {\n                    type: 'SET_ENABLED',\n                    enabled: enabled\n                };\n            },\n            setTerms(terms) {\n                return {\n                    type: 'SET_TERMS',\n                    terms: terms\n                };\n            },\n            setTaxonomy(taxonomy) {\n                return {\n                    type: 'SET_TAXONOMY',\n                    taxonomy: taxonomy\n                };\n            },\n            setTermsListByName(termsListByName) {\n                return {\n                    type: 'SET_TERMS_LIST_BY_NAME',\n                    termsListByName: termsListByName\n                };\n            },\n            setTermsListById(termsListById) {\n                return {\n                    type: 'SET_TERMS_LIST_BY_ID',\n                    termsListById: termsListById\n                };\n            },\n            setTaxonomyName(taxonomyName) {\n                return {\n                    type: 'SET_TAXONOMY_NAME',\n                    taxonomyName: taxonomyName\n                };\n            },\n            setIsFetchingTerms(isFetchingTerms) {\n                return {\n                    type: 'SET_IS_FETCHING_TERMS',\n                    isFetchingTerms: isFetchingTerms\n                }\n            },\n            setChangeAction(changeAction) {\n                return {\n                    type: 'SET_CHANGE_ACTION',\n                    changeAction: changeAction\n                }\n            },\n            setCalendarIsVisible(calendarIsVisible) {\n                return {\n                    type: 'SET_CALENDAR_IS_VISIBLE',\n                    calendarIsVisible: calendarIsVisible\n                }\n            },\n            setHasValidData(hasValidData) {\n                return {\n                    type: 'SET_HAS_VALID_DATA',\n                    hasValidData: hasValidData\n                }\n            }\n        },\n        selectors: {\n            getAction(state) {\n                return state.action;\n            },\n            getNewStatus(state) {\n                return state.newStatus;\n            },\n            getDate(state) {\n                return state.date;\n            },\n            getEnabled(state) {\n                return state.enabled;\n            },\n            getTerms(state) {\n                return state.terms;\n            },\n            getTaxonomy(state) {\n                return state.taxonomy;\n            },\n            getTermsListByName(state) {\n                return state.termsListByName;\n            },\n            getTermsListById(state) {\n                return state.termsListById;\n            },\n            getTaxonomyName(state) {\n                return state.taxonomyName;\n            },\n            getIsFetchingTerms(state) {\n                return state.isFetchingTerms;\n            },\n            getChangeAction(state) {\n                return state.changeAction;\n            },\n            getCalendarIsVisible(state) {\n                return state.calendarIsVisible;\n            },\n            getHasValidData(state) {\n                return state.hasValidData;\n            },\n        }\n    });\n\n    register(store);\n\n    return store;\n}\n","export const getCurrentTimeInSeconds = () => {\n    return normalizeUnixTimeToSeconds(new Date().getTime());\n}\n\nexport const getCurrentTimeAsTimestamp = () => {\n    return formatUnixTimeToTimestamp(getCurrentTimeInSeconds());\n}\n\nexport const formatUnixTimeToTimestamp = (unixTimestamp) => {\n    const date = new Date(\n        normalizeUnixTimeToSeconds(unixTimestamp)\n    );\n\n    const year = date.getFullYear();\n    const month = (\"0\" + (date.getMonth() + 1)).slice(-2); // Months are zero-based\n    const day = (\"0\" + date.getDate()).slice(-2);\n    const hours = (\"0\" + date.getHours()).slice(-2);\n    const minutes = (\"0\" + date.getMinutes()).slice(-2);\n    const seconds = (\"0\" + date.getSeconds()).slice(-2);\n\n    return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\n}\n\nexport const formatTimestampToUnixTime = (time) => {\n    const date = new Date(time);\n\n    return normalizeUnixTimeToSeconds(date.getTime());\n}\n\nexport const timeIsInSeconds = (time) => {\n    return parseInt(time).toString().length <= 10;\n}\n\nexport const normalizeUnixTimeToSeconds = (time) => {\n    time = parseInt(time);\n\n    return timeIsInSeconds() ? time : time / 1000;\n}\n\nexport const normalizeUnixTimeToMilliseconds = (time) => {\n    time = parseInt(time);\n\n    return timeIsInSeconds() ? time * 1000 : time;\n}\n","export const compact = (array) => {\n    if (!array) {\n        return [];\n    }\n\n    if (! Array.isArray(array) && typeof array === 'object') {\n        array = Object.values(array);\n    }\n\n    return array.filter((item) => {\n        return item !== null && item !== undefined && item !== '';\n    });\n}\n\nexport const debugLogFactory = (config) => {\n    return (description, ...message) => {\n        if (console && config.isDebugEnabled) {\n            console.debug('[Future]', description, ...message);\n        }\n    }\n}\n\nexport const isGutenbergEnabled = () => {\n    return document.body.classList.contains('block-editor-page');\n}\n\nexport const getElementByName = (name) => {\n    return document.getElementsByName(name)[0];\n}\n\nexport const getFieldByName = (name, postId) => {\n    return document.querySelector(`#the-list tr#post-${postId} .column-expirationdate input#future_action_${name}-${postId}`);\n}\n\nexport const getFieldValueByName = (name, postId) => {\n    const field = getFieldByName(name, postId);\n\n    if (!field) {\n        return null;\n    }\n\n    return field.value;\n};\n\nexport const getFieldValueByNameAsArrayOfInt = (name, postId) => {\n    const field = getFieldByName(name, postId);\n\n    if (!field || !field.value) {\n        return [];\n    }\n\n    if (typeof field.value === 'number') {\n        field.value = field.value.toString();\n    }\n\n    return field.value.split(',').map(term => parseInt(term));\n};\n\nexport const getFieldValueByNameAsBool = (name, postId) => {\n    const field = getFieldByName(name, postId);\n\n    if (!field) {\n        return false;\n    }\n\n    return field.value === '1' || field.value === 'true';\n}\n\nexport const getActionSettingsFromColumnData = (postId) => {\n    const columnData = document.querySelector(`#post-expire-column-${postId}`);\n\n    return {\n        enabled: columnData.dataset.actionEnabled === '1',\n        action: columnData.dataset.actionType,\n        date: columnData.dataset.actionDate,\n        dateUnix: columnData.dataset.actionDateUnix,\n        taxonomy: columnData.dataset.actionTaxonomy,\n        terms: columnData.dataset.actionTerms,\n        newStatus: columnData.dataset.actionNewStatus,\n    };\n}\n\n/**\n * This function is used to determine if a value is a number, including strings.\n *\n * @param {*} value\n * @returns\n */\nexport const isNumber = (value) => {\n    return !isNaN(value);\n}\n","module.exports = ReactDOM;","module.exports = publishpressFutureClassicEditorConfig;","module.exports = wp;","module.exports = wp.components;","module.exports = wp.data;","module.exports = wp.element;","module.exports = wp.hooks;","module.exports = wp.url;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { FutureActionPanelClassicEditor } from './components';\nimport { createStore } from './data';\nimport { isGutenbergEnabled } from './utils';\nimport { createRoot } from '&wp.element';\nimport { select } from '&wp.data';\nimport {\n    postType,\n    isNewPost,\n    actionsSelectOptions,\n    is12Hour,\n    timeFormat,\n    startOfWeek,\n    strings,\n    taxonomyName,\n    postTypeDefaultConfig,\n    defaultDate,\n    statusesSelectOptions\n} from \"&config.classic-editor\";\nimport { render } from \"&ReactDOM\";\n\nif (! isGutenbergEnabled()) {\n    const storeName = 'publishpress-future/future-action';\n\n    if (!select(storeName)) {\n        createStore({\n            name: storeName,\n            defaultState: {\n                autoEnable: postTypeDefaultConfig.autoEnable,\n                action: postTypeDefaultConfig.expireType,\n                newStatus: postTypeDefaultConfig.newStatus,\n                date: defaultDate,\n                taxonomy: postTypeDefaultConfig.taxonomy,\n                terms: postTypeDefaultConfig.terms,\n            }\n        });\n    }\n\n    const container = document.getElementById(\"publishpress-future-classic-editor\");\n    const component = (\n        <FutureActionPanelClassicEditor\n            storeName={storeName}\n            postType={postType}\n            isNewPost={isNewPost}\n            actionsSelectOptions={actionsSelectOptions}\n            statusesSelectOptions={statusesSelectOptions}\n            is12Hour={is12Hour}\n            timeFormat={timeFormat}\n            startOfWeek={startOfWeek}\n            strings={strings}\n            taxonomyName={taxonomyName}\n        />\n    );\n\n    createRoot(container).render(component);\n}\n"],"names":["ButtonsPanel","props","children","CheckboxControl","checked","setChecked","description","unescapedDescription","__html","onChange","value","label","name","className","DateTimePicker","currentDate","is12Hour","startOfWeek","wp","components","PanelRow","SelectControl","FormTokenField","Spinner","BaseControl","element","Fragment","useEffect","useState","decodeEntities","htmlEntities","addQueryArgs","url","data","useSelect","useDispatch","apiFetch","FutureActionPanel","action","select","storeName","getAction","date","getDate","enabled","getEnabled","terms","getTerms","taxonomy","getTaxonomy","taxonomyName","getTaxonomyName","termsListByName","getTermsListByName","termsListById","getTermsListById","isFetchingTerms","getIsFetchingTerms","calendarIsVisible","getCalendarIsVisible","hasValidData","getHasValidData","newStatus","getNewStatus","validationError","setValidationError","setAction","setDate","setEnabled","setTerms","setTaxonomy","setTermsListByName","setTermsListById","setTaxonomyName","setIsFetchingTerms","setCalendarIsVisible","setHasValidData","setNewStatus","mapTermsListById","map","term","insertTerm","id","count","link","slug","mapTermsListByName","callOnChangeData","attribute","onChangeData","handleEnabledChange","isChecked","fetchTerms","handleActionChange","handleNewStatusChange","handleDateChange","handleTermsChange","path","then","result","forEach","storeCalendarIsVisibleOnStorage","localStorage","setItem","context","getCalendarIsVisibleFromStorage","getItem","autoEnableAndHideCheckbox","isCleanNewPost","onDataIsValid","onDataIsInvalid","selectedTerms","length","termsListByNameKeys","Object","keys","panelClass","contentPanelClass","datePanelClass","is24hour","timeFormat","replaceCurlyBracketsWithLink","string","href","target","parts","split","push","shift","part","before","after","actionsSelectOptions","filter","item","indexOf","HelpText","strings","timezoneSettingsHelp","displayTaxonomyField","String","includes","termsFieldLabel","newTerms","replace","removeTerms","addTerms","validateData","valid","errorActionRequired","errorDateRequired","Date","errorDateInPast","isTermRequired","noTermIsSelected","errorTermsRequired","forceIgnoreAutoSubmitOnEnter","e","jQuery","addClass","enablePostExpiration","statusesSelectOptions","loading","noTaxonomyFound","noTermsFound","addTermsPlaceholder","FutureActionPanelBlockEditor","PluginDocumentSettingPanel","editPost","editPostAttribute","newAttribute","publishpress_future_action","entries","store","getEditedPostAttribute","lockPostSaving","unlockPostSaving","panelTitle","postTypeDefaultConfig","autoEnable","postType","FutureActionPanelBulkEdit","join","changeAction","getChangeAction","setChangeAction","termsString","handleStrategyChange","options","noChange","changeAdd","addOnly","changeOnly","removeOnly","optionsToDisplayPanel","prop","futureActionUpdate","isNewPost","nonce","FutureActionPanelClassicEditor","browserTimezoneOffset","getTimezoneOffset","getElementByName","document","getElementsByName","getTermsFromElementByName","parseInt","getElementValueByName","FutureActionPanelQuickEdit","NonceControl","referrer","apiRequestController","PostTypeSettingsPanel","originalExpireTypeList","expireTypeList","settings","postTypeTaxonomy","setPostTypeTaxonomy","termOptions","setTermOptions","termsSelectIsLoading","setTermsSelectIsLoading","setSelectedTerms","howToExpire","settingHowToExpire","setSettingHowToExpire","active","isActive","setIsActive","defaultExpireOffset","expireOffset","setExpireOffset","emailNotification","setEmailNotification","autoEnabled","isAutoEnabled","setIsAutoEnabled","taxonomyLabel","setTaxonomyLabel","howToExpireList","setHowToExpireList","hasPendingValidation","setHasPendingValidation","taxonomyRelatedActions","onChangeTaxonomy","onChangeTerms","onChangeHowToExpire","onChangeActive","onChangeExpireOffset","onChangeEmailNotification","onChangeAutoEnabled","abort","AbortController","undefined","signal","method","offset","isValid","message","taxonomiesList","newExpireTypeList","settingsTermsOptions","option","expireType","toLowerCase","onValidationStarted","onValidationFinished","termOptionsLabels","settingsRows","text","fieldActive","fieldActiveLabel","fieldAutoEnable","fieldAutoEnableLabel","fieldTaxonomy","noItemsfound","fieldTaxonomyDescription","fieldHowToExpire","fieldHowToExpireDescription","statusesList","fieldTerm","fieldTermDescription","fieldDefaultDateTimeOffset","globalDefaultExpireOffset","fieldDefaultDateTimeOffsetDescription","fieldWhoToNotify","fieldWhoToNotifyDescription","legend","PostTypesSettingsPanels","panels","postTypeSettings","noItemFoundMessage","selected","SettingRow","SettingsFieldset","SettingsForm","SettingsSection","title","SettingsTable","bodyChildren","SubmitButton","disabled","TextControl","placeholder","ToggleArrowButton","onClick","iconExpanded","iconCollapsed","icon","isExpanded","titleExpanded","titleCollapsed","ToggleCalendarDatePicker","onToggleCalendar","onChangeDate","toggleButtonElement","querySelector","dateTimeElement","nextElementSibling","timeElement","dateElement","nextSibling","insertBefore","hideCalendar","showCalendar","TokensControl","stringValue","setStringValue","maxSuggestions","expandOnFocus","autoSelectFirstMatch","TrueFalseControl","trueValue","is","trueLabel","falseValue","falseLabel","createStore","defaultState","reducer","state","type","getTime","actions","selectors","getCurrentTimeInSeconds","normalizeUnixTimeToSeconds","getCurrentTimeAsTimestamp","formatUnixTimeToTimestamp","unixTimestamp","year","getFullYear","month","getMonth","slice","day","hours","getHours","minutes","getMinutes","seconds","getSeconds","formatTimestampToUnixTime","time","timeIsInSeconds","toString","normalizeUnixTimeToMilliseconds","compact","array","Array","isArray","values","debugLogFactory","config","console","isDebugEnabled","debug","isGutenbergEnabled","body","classList","contains","getFieldByName","postId","getFieldValueByName","field","getFieldValueByNameAsArrayOfInt","getFieldValueByNameAsBool","getActionSettingsFromColumnData","columnData","dataset","actionEnabled","actionType","actionDate","dateUnix","actionDateUnix","actionTaxonomy","actionTerms","actionNewStatus","isNumber","isNaN","defaultDate","container","getElementById","component","render"],"sourceRoot":""}