{"version":3,"file":"quick-edit.js","mappings":"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","sources":["webpack://post-expirator/./assets/jsx/components/ButtonsPanel.jsx","webpack://post-expirator/./assets/jsx/components/CheckboxControl.jsx","webpack://post-expirator/./assets/jsx/components/DateTimePicker.jsx","webpack://post-expirator/./assets/jsx/components/FutureActionPanel.jsx","webpack://post-expirator/./assets/jsx/components/FutureActionPanelBlockEditor.jsx","webpack://post-expirator/./assets/jsx/components/FutureActionPanelBulkEdit.jsx","webpack://post-expirator/./assets/jsx/components/FutureActionPanelClassicEditor.jsx","webpack://post-expirator/./assets/jsx/components/FutureActionPanelQuickEdit.jsx","webpack://post-expirator/./assets/jsx/components/NonceControl.jsx","webpack://post-expirator/./assets/jsx/components/PostTypeSettingsPanel.jsx","webpack://post-expirator/./assets/jsx/components/PostTypesSettingsPanels.jsx","webpack://post-expirator/./assets/jsx/components/SelectControl.jsx","webpack://post-expirator/./assets/jsx/components/SettingRow.jsx","webpack://post-expirator/./assets/jsx/components/SettingsFieldset.jsx","webpack://post-expirator/./assets/jsx/components/SettingsForm.jsx","webpack://post-expirator/./assets/jsx/components/SettingsSection.jsx","webpack://post-expirator/./assets/jsx/components/SettingsTable.jsx","webpack://post-expirator/./assets/jsx/components/SubmitButton.jsx","webpack://post-expirator/./assets/jsx/components/TextControl.jsx","webpack://post-expirator/./assets/jsx/components/ToggleArrowButton.jsx","webpack://post-expirator/./assets/jsx/components/ToggleCalendarDatePicker.jsx","webpack://post-expirator/./assets/jsx/components/TokensControl.jsx","webpack://post-expirator/./assets/jsx/components/TrueFalseControl.jsx","webpack://post-expirator/./assets/jsx/components/index.jsx","webpack://post-expirator/./assets/jsx/data.jsx","webpack://post-expirator/./assets/jsx/time.jsx","webpack://post-expirator/./assets/jsx/utils.jsx","webpack://post-expirator/external var \"ReactDOM\"","webpack://post-expirator/external var \"publishpressFutureQuickEditConfig\"","webpack://post-expirator/external var \"window\"","webpack://post-expirator/external var \"wp\"","webpack://post-expirator/external var \"wp.components\"","webpack://post-expirator/external var \"wp.data\"","webpack://post-expirator/external var \"wp.element\"","webpack://post-expirator/external var \"wp.hooks\"","webpack://post-expirator/external var \"wp.url\"","webpack://post-expirator/webpack/bootstrap","webpack://post-expirator/./assets/jsx/quick-edit.jsx"],"sourcesContent":["/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\n\nexport const ButtonsPanel = function (props) {\n    return (\n        <div>\n            {props.children}\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\nimport { Fragment, useState  } from \"&wp.element\";\nimport { CheckboxControl as WPCheckboxControl } from \"&wp.components\";\n\nexport const CheckboxControl = function (props) {\n    const [checked, setChecked] = useState(props.checked || false);\n\n    let description;\n\n    if (props.unescapedDescription) {\n        // If using this option, the HTML has to be escaped before injected into the JS interface.\n        description = <p className=\"description\" dangerouslySetInnerHTML={{ __html: props.description }}></p>;\n    } else {\n        description = <p className=\"description\">{props.description}</p>;\n    }\n\n    const onChange = function (value) {\n        setChecked(value);\n\n        if (props.onChange) {\n            props.onChange(value);\n        }\n    };\n\n    return (\n        <Fragment>\n            <WPCheckboxControl\n                label={props.label}\n                name={props.name}\n                id={props.name}\n                className={props.className}\n                checked={checked || false}\n                onChange={onChange}\n            />\n\n            {description}\n        </Fragment>\n    )\n}\n","import { normalizeUnixTimeToMilliseconds } from \"../time\";\nimport { DateTimePicker as WPDateTimePicker } from \"&wp.components\";\n\n\nexport const DateTimePicker = ({currentDate, onChange, is12Hour, startOfWeek}) => {\n    if (typeof currentDate === 'number') {\n        currentDate = normalizeUnixTimeToMilliseconds(currentDate);\n    }\n\n    return (\n        <WPDateTimePicker\n            currentDate={currentDate}\n            onChange={onChange}\n            __nextRemoveHelpButton={true}\n            is12Hour={is12Hour}\n            startOfWeek={startOfWeek}\n        />\n    )\n}\n","import { compact } from '../utils';\nimport { ToggleCalendarDatePicker } from './ToggleCalendarDatePicker';\n\nconst { PanelRow, CheckboxControl, SelectControl, FormTokenField, Spinner, BaseControl } = wp.components;\nconst { Fragment, useEffect } = wp.element;\nconst { decodeEntities } = wp.htmlEntities;\nconst { addQueryArgs } = wp.url;\nconst {\n    useSelect,\n    useDispatch\n} = wp.data;\nconst { apiFetch } = wp;\n\nexport const FutureActionPanel = (props) => {\n    const action = useSelect((select) => select(props.storeName).getAction(), []);\n    const date = useSelect((select) => select(props.storeName).getDate(), []);\n    const enabled = useSelect((select) => select(props.storeName).getEnabled(), []);\n    const terms = useSelect((select) => select(props.storeName).getTerms(), []);\n    const taxonomy = useSelect((select) => select(props.storeName).getTaxonomy(), []);\n    const taxonomyName = useSelect((select) => select(props.storeName).getTaxonomyName(), []);\n    const termsListByName = useSelect((select) => select(props.storeName).getTermsListByName(), []);\n    const termsListById = useSelect((select) => select(props.storeName).getTermsListById(), []);\n    const isFetchingTerms = useSelect((select) => select(props.storeName).getIsFetchingTerms(), []);\n    const calendarIsVisible = useSelect((select) => select(props.storeName).getCalendarIsVisible(), []);\n\n    const {\n        setAction,\n        setDate,\n        setEnabled,\n        setTerms,\n        setTaxonomy,\n        setTermsListByName,\n        setTermsListById,\n        setTaxonomyName,\n        setIsFetchingTerms,\n        setCalendarIsVisible\n    } = useDispatch(props.storeName);\n\n    const mapTermsListById = (terms) => {\n        if (typeof terms !== 'object' || terms === null) {\n            return {};\n        }\n\n        return terms.map((term) => {\n            return termsListById[term];\n        });\n    }\n\n    const insertTerm = (term) => {\n        termsListByName[term] = {id: term, count: 0, description: \"\", link: \"\", name: term, slug: term, taxonomy: taxonomy};\n        termsListById[term] = term;\n        setTermsListByName(termsListByName);\n        setTermsListById(termsListById);\n        setTerms([...terms, term]);\n\n    }\n\n    const mapTermsListByName = (terms) => {\n        if (typeof terms !== 'object' || terms === null) {\n            return {};\n        }\n\n        return terms.map((term) => {\n            if (termsListByName[term]) {\n                return termsListByName[term].id;\n            }\n\n            insertTerm(term);\n\n            return term;\n        });\n    }\n\n    const callOnChangeData = (attribute, value) => {\n        if (typeof props.onChangeData === 'function') {\n            props.onChangeData(attribute, value);\n        }\n    }\n\n    const handleEnabledChange = (isChecked) => {\n        setEnabled(isChecked);\n\n        if (isChecked) {\n            setAction(props.action);\n            setDate(props.date);\n            setTerms(props.terms);\n            setTaxonomy(props.taxonomy);\n\n            fetchTerms();\n        }\n\n        callOnChangeData('enabled', isChecked);\n    }\n\n    const handleActionChange = (value) => {\n        setAction(value);\n\n        callOnChangeData('action', value);\n    }\n\n    const handleDateChange = (value) => {\n        setDate(value);\n\n        callOnChangeData('date', value);\n    }\n\n    const handleTermsChange = (value) => {\n        value = mapTermsListByName(value);\n\n        setTerms(value);\n\n        callOnChangeData('terms', value);\n    }\n\n    const fetchTerms = () => {\n        let termsListByName = {};\n        let termsListById = {};\n\n        setIsFetchingTerms(true);\n\n        if ((!taxonomy && props.postType === 'post') || taxonomy === 'category') {\n            apiFetch({\n                path: addQueryArgs('wp/v2/categories', { per_page: -1 }),\n            }).then((list) => {\n                list.forEach(cat => {\n                    termsListByName[cat.name] = cat;\n                    termsListById[cat.id] = cat.name;\n                });\n\n                setTermsListByName(termsListByName);\n                setTermsListById(termsListById);\n                setTaxonomyName(props.strings.category);\n                setIsFetchingTerms(false);\n            });\n        } else {\n            apiFetch({\n                path: addQueryArgs(`publishpress-future/v1/taxonomies/` + props.postType),\n            }).then((response) => {\n                if (parseInt(response.count) > 0) {\n                    apiFetch({\n                        path: addQueryArgs(`wp/v2/taxonomies/${taxonomy}`, { context: 'edit', per_page: -1 }),\n                    }).then((taxonomyAttributes) => {\n                        // fetch all terms\n                        apiFetch({\n                            path: addQueryArgs(`wp/v2/${taxonomyAttributes.rest_base}`, { context: 'edit', per_page: -1 }),\n                        }).then((terms) => {\n                            terms.forEach(term => {\n                                termsListByName[decodeEntities(term.name)] = term;\n                                termsListById[term.id] = decodeEntities(term.name);\n                            });\n\n                            setTermsListByName(termsListByName);\n                            setTermsListById(termsListById);\n                            setTaxonomyName(decodeEntities(taxonomyAttributes.name));\n                            setIsFetchingTerms(false);\n                        });\n                    });\n                }\n            });\n        }\n    }\n\n    const storeCalendarIsVisibleOnStorage = (value) => {\n        localStorage.setItem('FUTURE_ACTION_CALENDAR_IS_VISIBLE_' + props.context, value ? '1' : '0');\n    }\n\n    const getCalendarIsVisibleFromStorage = () => {\n        return localStorage.getItem('FUTURE_ACTION_CALENDAR_IS_VISIBLE_' + props.context);\n    }\n\n    useEffect(() => {\n        if (props.autoEnableAndHideCheckbox)  {\n            setEnabled(true);\n        } else {\n            setEnabled(props.enabled);\n        }\n\n        setAction(props.action);\n        setDate(props.date);\n        setTerms(props.terms);\n        setTaxonomy(props.taxonomy);\n\n        if (getCalendarIsVisibleFromStorage() === null) {\n            setCalendarIsVisible(props.calendarIsVisible);\n        } else {\n            setCalendarIsVisible(getCalendarIsVisibleFromStorage() === '1');\n        }\n\n        // We need to get the value directly from the props because the value from the store is not updated yet\n        if (props.enabled) {\n            if (props.isCleanNewPost) {\n                // Force populate the default values\n                handleEnabledChange(true);\n            }\n\n            fetchTerms();\n        }\n    }, []);\n\n    useEffect(() => {\n        storeCalendarIsVisibleOnStorage(calendarIsVisible);\n    }, [calendarIsVisible]);\n\n    let selectedTerms = [];\n    if (terms && terms.length > 0 && termsListById) {\n        selectedTerms = compact(mapTermsListById(terms));\n\n        if (typeof selectedTerms === 'string') {\n            selectedTerms = [];\n        }\n    }\n\n    let termsListByNameKeys = [];\n    if (typeof termsListByName === 'object' && termsListByName !== null) {\n        termsListByNameKeys = Object.keys(termsListByName);\n    }\n\n    const panelClass = calendarIsVisible ? 'future-action-panel' : 'future-action-panel hidden-calendar';\n    const contentPanelClass = calendarIsVisible ? 'future-action-panel-content' : 'future-action-panel-content hidden-calendar';\n    const datePanelClass = calendarIsVisible ? 'future-action-date-panel' : 'future-action-date-panel hidden-calendar';\n\n\n    const replaceCurlyBracketsWithLink = (string, href, target) => {\n        const parts = string.split('{');\n        const result = [];\n\n        result.push(parts.shift());\n\n        for (const part of parts) {\n            const [before, after] = part.split('}');\n\n            result.push(\n                <a href={href} target={target} key={href}>{before}</a>\n            );\n\n            result.push(after);\n        }\n\n        return result;\n    };\n\n    const HelpText = replaceCurlyBracketsWithLink(props.strings.timezoneSettingsHelp, '/wp-admin/options-general.php#timezone_string', '_blank');\n\n    return (\n        <div className={panelClass}>\n            {props.autoEnableAndHideCheckbox && (\n                <input type=\"hidden\" name={'future_action_enabled'} value={1} />\n            )}\n\n            {! props.autoEnableAndHideCheckbox && (\n                <PanelRow>\n                    <CheckboxControl\n                        label={props.strings.enablePostExpiration}\n                        checked={enabled || false}\n                        onChange={handleEnabledChange}\n                    />\n                </PanelRow>\n            )}\n\n            {enabled && (\n                <Fragment>\n                    <PanelRow className={contentPanelClass + ' future-action-full-width'}>\n                        <SelectControl\n                            label={props.strings.action}\n                            value={action}\n                            options={props.actionsSelectOptions}\n                            onChange={handleActionChange}\n                        />\n                    </PanelRow>\n\n                    {\n                        String(action).includes('category') && (\n                            isFetchingTerms && (\n                                <PanelRow>\n                                    <BaseControl label={taxonomyName}>\n                                        {`${props.strings.loading} (${taxonomyName})`}\n                                        <Spinner />\n                                    </BaseControl>\n                                </PanelRow>\n                            )\n                            || (!taxonomy && (\n                                <PanelRow>\n                                    <BaseControl label={taxonomyName}>\n                                        <i className=\"dashicons dashicons-warning\"></i> {props.strings.noTaxonomyFound}\n                                    </BaseControl>\n                                </PanelRow>\n                            )\n                                || (\n                                    termsListByNameKeys.length === 0 && (\n                                        <PanelRow>\n                                            <BaseControl label={taxonomyName}>\n                                                <i className=\"dashicons dashicons-warning\"></i> {props.strings.noTermsFound}\n                                            </BaseControl>\n                                        </PanelRow>\n                                    )\n                                    || (\n                                        <PanelRow className=\"future-action-full-width\">\n                                            <BaseControl>\n                                                <FormTokenField\n                                                    label={taxonomyName}\n                                                    value={selectedTerms}\n                                                    suggestions={termsListByNameKeys}\n                                                    onChange={handleTermsChange}\n                                                    maxSuggestions={10}\n                                                />\n                                            </BaseControl>\n                                        </PanelRow>\n                                    )\n                                )\n                            )\n                        )\n                    }\n\n                    <PanelRow className={datePanelClass}>\n                        <ToggleCalendarDatePicker\n                            currentDate={date}\n                            onChangeDate={handleDateChange}\n                            onToggleCalendar={() => setCalendarIsVisible(!calendarIsVisible)}\n                            is12Hour={props.is12Hour}\n                            startOfWeek={props.startOfWeek}\n                            isExpanded={calendarIsVisible}\n                            strings={props.strings}\n                        />\n                    </PanelRow>\n\n                    <PanelRow>\n                        <div className=\"future-action-help-text\">\n                            <hr />\n\n                            <span className=\"dashicons dashicons-info\"></span> {HelpText}\n                        </div>\n                    </PanelRow>\n                </Fragment>\n            )}\n        </div>\n    );\n};\n","import { FutureActionPanel } from './';\n\nexport const FutureActionPanelBlockEditor = (props) => {\n    const { PluginDocumentSettingPanel } = wp.editPost;\n    const { useDispatch, select } = wp.data;\n\n    const { editPost } = useDispatch('core/editor');\n\n    const editPostAttribute = (newAttribute) => {\n        const attribute = {\n            publishpress_future_action: {}\n        };\n\n        // For each property on newAttribute, set the value on attribute\n        for (const [name, value] of Object.entries(newAttribute)) {\n            attribute.publishpress_future_action[name] = value;\n        }\n\n        editPost(attribute);\n    }\n\n    const onChangeData = (attribute, value) => {\n        const store = select(props.storeName);\n\n        const newAttribute = {\n            'enabled': store.getEnabled()\n        }\n\n        if (newAttribute.enabled) {\n            newAttribute['action'] = store.getAction();\n            newAttribute['date'] = store.getDate();\n            newAttribute['terms'] = store.getTerms();\n            newAttribute['taxonomy'] = store.getTaxonomy();\n        }\n\n        editPostAttribute(newAttribute);\n    }\n\n    const data = select('core/editor').getEditedPostAttribute('publishpress_future_action');\n\n    return (\n        <PluginDocumentSettingPanel\n            name={'publishpress-future-action-panel'}\n            title={props.strings.panelTitle}\n            icon=\"calendar\"\n            initialOpen={props.postTypeDefaultConfig.autoEnable}\n            className={'post-expirator-panel'}>\n            <div id='publishpress-future-block-editor'>\n                <FutureActionPanel\n                    context={'block-editor'}\n                    postType={props.postType}\n                    isCleanNewPost={props.isCleanNewPost}\n                    actionsSelectOptions={props.actionsSelectOptions}\n                    enabled={data.enabled}\n                    calendarIsVisible={true}\n                    action={data.action}\n                    date={data.date}\n                    terms={data.terms}\n                    taxonomy={data.taxonomy}\n                    taxonomyName={props.taxonomyName}\n                    onChangeData={onChangeData}\n                    is12Hour={props.is12Hour}\n                    startOfWeek={props.startOfWeek}\n                    storeName={props.storeName}\n                    strings={props.strings} />\n            </div>\n        </PluginDocumentSettingPanel>\n    );\n};\n","import { FutureActionPanel, SelectControl } from '.';\nimport { getElementByName } from '../utils';\n\nexport const FutureActionPanelBulkEdit = (props) => {\n    const { useSelect, useDispatch, select } = wp.data;\n\n    const onChangeData = (attribute, value) => {\n        getElementByName('future_action_bulk_enabled').value = select(props.storeName).getEnabled() ? 1 : 0;\n        getElementByName('future_action_bulk_action').value = select(props.storeName).getAction();\n        getElementByName('future_action_bulk_date').value = select(props.storeName).getDate();\n        getElementByName('future_action_bulk_terms').value = select(props.storeName).getTerms().join(',');\n        getElementByName('future_action_bulk_taxonomy').value = select(props.storeName).getTaxonomy();\n    }\n\n    const date = useSelect((select) => select(props.storeName).getDate(), []);\n    const enabled = useSelect((select) => select(props.storeName).getEnabled(), []);\n    const action = useSelect((select) => select(props.storeName).getAction(), []);\n    const terms = useSelect((select) => select(props.storeName).getTerms(), []);\n    const taxonomy = useSelect((select) => select(props.storeName).getTaxonomy(), []);\n    const changeAction = useSelect((select) => select(props.storeName).getChangeAction(), []);\n\n    const {\n        setChangeAction\n    } = useDispatch(props.storeName);\n\n    let termsString = terms;\n    if (typeof terms === 'object') {\n        termsString = terms.join(',');\n    }\n\n    const handleStrategyChange = (value) => {\n        setChangeAction(value);\n    };\n\n    const options = [\n        { value: 'no-change', label: props.strings.noChange },\n        { value: 'change-add', label: props.strings.changeAdd },\n        { value: 'add-only', label: props.strings.addOnly },\n        { value: 'change-only', label: props.strings.changeOnly },\n        { value: 'remove-only', label: props.strings.removeOnly },\n    ];\n\n    const optionsToDisplayPanel = ['change-add', 'add-only', 'change-only'];\n\n    return (\n        <div className={'post-expirator-panel'}>\n            <SelectControl\n                label={props.strings.futureActionUpdate}\n                name={'future_action_bulk_change_action'}\n                value={changeAction}\n                options={options}\n                onChange={handleStrategyChange}\n            />\n\n            {optionsToDisplayPanel.includes(changeAction) && (\n                <FutureActionPanel\n                    context={'bulk-edit'}\n                    autoEnableAndHideCheckbox={true}\n                    postType={props.postType}\n                    isCleanNewPost={props.isNewPost}\n                    actionsSelectOptions={props.actionsSelectOptions}\n                    enabled={true}\n                    calendarIsVisible={false}\n                    action={action}\n                    date={date}\n                    terms={terms}\n                    taxonomy={taxonomy}\n                    taxonomyName={props.taxonomyName}\n                    onChangeData={onChangeData}\n                    is12Hour={props.is12Hour}\n                    startOfWeek={props.startOfWeek}\n                    storeName={props.storeName}\n                    strings={props.strings} />\n            )}\n\n            {/* Bulk edit JS code will save only fields with name inside the edit row */}\n            <input type=\"hidden\" name={'future_action_bulk_enabled'} value={enabled ? 1 : 0} />\n            <input type=\"hidden\" name={'future_action_bulk_action'} value={action} />\n            <input type=\"hidden\" name={'future_action_bulk_date'} value={date} />\n            <input type=\"hidden\" name={'future_action_bulk_terms'} value={termsString} />\n            <input type=\"hidden\" name={'future_action_bulk_taxonomy'} value={taxonomy} />\n            <input type=\"hidden\" name={'future_action_bulk_view'} value=\"bulk-edit\" />\n            <input type=\"hidden\" name={'_future_action_nonce'} value={props.nonce} />\n        </div>\n    );\n};\n","import { FutureActionPanel } from \"./\";\nimport { select } from \"&wp.data\";\n\nexport const FutureActionPanelClassicEditor = (props) => {\n    const browserTimezoneOffset = new Date().getTimezoneOffset();\n\n    const getElementByName = (name) => {\n        return document.getElementsByName(name)[0];\n    }\n\n    const onChangeData = (attribute, value) => {\n        const store = select(props.storeName);\n\n        getElementByName('future_action_enabled').value = store.getEnabled() ? 1 : 0;\n        getElementByName('future_action_action').value = store.getAction();\n        getElementByName('future_action_date').value = store.getDate();\n        getElementByName('future_action_terms').value = store.getTerms().join(',');\n        getElementByName('future_action_taxonomy').value = store.getTaxonomy();\n    }\n\n    const data = {\n        enabled: getElementByName('future_action_enabled').value === '1',\n        action: getElementByName('future_action_action').value,\n        date: getElementByName('future_action_date').value,\n        terms: getElementByName('future_action_terms').value.split(',').map(term => parseInt(term)),\n        taxonomy: getElementByName('future_action_taxonomy').value,\n    };\n\n    return (\n        <div className={'post-expirator-panel'}>\n            <FutureActionPanel\n                context={'classic-editor'}\n                postType={props.postType}\n                isCleanNewPost={props.isNewPost}\n                actionsSelectOptions={props.actionsSelectOptions}\n                enabled={data.enabled}\n                calendarIsVisible={true}\n                action={data.action}\n                date={data.date}\n                terms={data.terms}\n                taxonomy={data.taxonomy}\n                taxonomyName={props.taxonomyName}\n                onChangeData={onChangeData}\n                is12Hour={props.is12Hour}\n                startOfWeek={props.startOfWeek}\n                storeName={props.storeName}\n                strings={props.strings} />\n        </div>\n    );\n};\n","import { FutureActionPanel } from './';\nimport { useSelect } from '&wp.data';\n\nexport const FutureActionPanelQuickEdit = (props) => {\n    const onChangeData = (attribute, value) => {};\n\n    const date = useSelect((select) => select(props.storeName).getDate(), []);\n    const enabled = useSelect((select) => select(props.storeName).getEnabled(), []);\n    const action = useSelect((select) => select(props.storeName).getAction(), []);\n    const terms = useSelect((select) => select(props.storeName).getTerms(), []);\n    const taxonomy = useSelect((select) => select(props.storeName).getTaxonomy(), []);\n\n    let termsString = terms;\n    if (typeof terms === 'object') {\n        termsString = terms.join(',');\n    }\n\n    return (\n        <div className={'post-expirator-panel'}>\n            <FutureActionPanel\n                context={'quick-edit'}\n                postType={props.postType}\n                isCleanNewPost={props.isNewPost}\n                actionsSelectOptions={props.actionsSelectOptions}\n                enabled={enabled}\n                calendarIsVisible={false}\n                action={action}\n                date={date}\n                terms={terms}\n                taxonomy={taxonomy}\n                taxonomyName={props.taxonomyName}\n                onChangeData={onChangeData}\n                is12Hour={props.is12Hour}\n                startOfWeek={props.startOfWeek}\n                storeName={props.storeName}\n                strings={props.strings} />\n\n            {/* Quick edit JS code will save only fields with name inside the edit row */}\n            <input type=\"hidden\" name={'future_action_enabled'} value={enabled ? 1 : 0} />\n            <input type=\"hidden\" name={'future_action_action'} value={action} />\n            <input type=\"hidden\" name={'future_action_date'} value={date} />\n            <input type=\"hidden\" name={'future_action_terms'} value={termsString} />\n            <input type=\"hidden\" name={'future_action_taxonomy'} value={taxonomy} />\n            <input type=\"hidden\" name={'future_action_view'} value=\"quick-edit\" />\n            <input type=\"hidden\" name={'_future_action_nonce'} value={props.nonce} />\n        </div>\n    );\n};\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\nimport { Fragment } from \"&wp.element\";\n\nexport const NonceControl = function (props) {\n    if (! props.name) {\n        props.name = '_wpnonce';\n    }\n\n    if (! props.referrer) {\n        props.referrer = true;\n    }\n\n    return (\n        <Fragment>\n            <input type=\"hidden\" name={props.name} id={props.name} value={props.nonce} />\n\n            {props.referrer &&\n                <input type=\"hidden\" name=\"_wp_http_referer\" value={props.referrer}/>\n            }\n        </Fragment>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\n\nimport {\n    SettingRow,\n    SettingsFieldset,\n    SettingsTable,\n    SelectControl,\n    TextControl,\n    TokensControl,\n    CheckboxControl\n} from './';\nimport { useEffect, useState } from '&wp.element';\nimport { addQueryArgs } from '&wp.url';\nimport { applyFilters } from '&wp.hooks';\nimport { apiFetch } from '&wp';\n\nexport const PostTypeSettingsPanel = function (props) {\n    const [postTypeTaxonomy, setPostTypeTaxonomy] = useState(props.settings.taxonomy);\n    const [termOptions, setTermOptions] = useState([]);\n    const [termsSelectIsLoading, setTermsSelectIsLoading] = useState(false);\n    const [selectedTerms, setSelectedTerms] = useState([]);\n    const [settingHowToExpire, setSettingHowToExpire] = useState(props.settings.howToExpire);\n    const [isActive, setIsActive] = useState(props.settings.active);\n    const [expireOffset, setExpireOffset] = useState(props.settings.defaultExpireOffset);\n    const [emailNotification, setEmailNotification] = useState(props.settings.emailNotification);\n    const [isAutoEnabled, setIsAutoEnabled] = useState(props.settings.autoEnabled);\n\n    const onChangeTaxonomy = function (value) {\n        setPostTypeTaxonomy(value);\n    };\n\n    const onChangeTerms = (value) => {\n        setSelectedTerms(value);\n    };\n\n    const onChangeHowToExpire = (value) => {\n        setSettingHowToExpire(value);\n    }\n\n    const onChangeActive = (value) => {\n        setIsActive(value);\n    }\n\n    const onChangeExpireOffset = (value) => {\n        setExpireOffset(value);\n    }\n\n    const onChangeEmailNotification = (value) => {\n        setEmailNotification(value);\n    }\n\n    const onChangeAutoEnabled = (value) => {\n        setIsAutoEnabled(value);\n    }\n\n    useEffect(() => {\n        const updateTermsOptionsState = (list) => {\n            let options = [];\n\n            let settingsTermsOptions = null;\n            let option;\n            list.forEach(term => {\n                option = { value: term.id, label: term.name };\n                options.push(option);\n\n                if (postTypeTaxonomy === props.settings.taxonomy && props.settings.terms.includes(term.id)) {\n                    if (settingsTermsOptions === null) {\n                        settingsTermsOptions = [];\n                    }\n\n                    settingsTermsOptions.push(option.label);\n                }\n            });\n\n            setTermOptions(options);\n            setTermsSelectIsLoading(false);\n            setSelectedTerms(settingsTermsOptions);\n        };\n\n        if ((!postTypeTaxonomy && props.postType === 'post') || postTypeTaxonomy === 'category') {\n            setTermsSelectIsLoading(true);\n            apiFetch({\n                path: addQueryArgs(`wp/v2/categories`, { per_page: -1 }),\n            }).then(updateTermsOptionsState);\n        } else {\n            if (!postTypeTaxonomy || !props.taxonomiesList) {\n                return;\n            }\n\n            setTermsSelectIsLoading(true);\n            apiFetch({\n                path: addQueryArgs(`wp/v2/taxonomies/${postTypeTaxonomy}`),\n            }).then((taxAttributes) => {\n                // fetch all terms\n                apiFetch({\n                    path: addQueryArgs(`wp/v2/${taxAttributes.rest_base}`),\n                }).then(updateTermsOptionsState);\n            }).catch((error) => {\n                console.debug('Taxonomy terms error', error);\n                setTermsSelectIsLoading(false);\n            });\n        }\n    }, [postTypeTaxonomy]);\n\n    const termOptionsLabels = termOptions.map((term) => term.label);\n\n    let settingsRows = [\n        <SettingRow label={props.text.fieldActive} key={'expirationdate_activemeta-' + props.postType}>\n            <CheckboxControl\n                name={'expirationdate_activemeta-' + props.postType}\n                checked={isActive || false}\n                label={props.text.fieldActiveLabel}\n                onChange={onChangeActive}\n            />\n        </SettingRow>\n    ];\n\n    if (isActive) {\n        settingsRows.push(\n            <SettingRow label={props.text.fieldAutoEnable} key={'expirationdate_autoenable-' + props.postType}>\n                <CheckboxControl\n                    name={'expirationdate_autoenable-' + props.postType}\n                    checked={isAutoEnabled || false}\n                    label={props.text.fieldAutoEnableLabel}\n                    onChange={onChangeAutoEnabled}\n                />\n            </SettingRow>\n        );\n\n        settingsRows.push(\n            <SettingRow label={props.text.fieldTaxonomy} key={'expirationdate_taxonomy-' + props.postType}>\n                <SelectControl\n                    name={'expirationdate_taxonomy-' + props.postType}\n                    options={props.taxonomiesList}\n                    selected={postTypeTaxonomy}\n                    noItemFoundMessage={props.text.noItemsfound}\n                    data={props.postType}\n                    onChange={onChangeTaxonomy}\n                >\n                </SelectControl>\n            </SettingRow>\n        );\n\n        // Remove items from expireTypeList if related to taxonomies and there is no taxonmoy for the post type\n        if (props.taxonomiesList.length === 0) {\n            props.expireTypeList[props.postType] = props.expireTypeList[props.postType].filter((item) => {\n                return ['category', 'category-add', 'category-remove'].indexOf(item.value) === -1;\n            });\n        }\n\n        settingsRows.push(\n            <SettingRow label={props.text.fieldHowToExpire} key={'expirationdate_expiretype-' + props.postType}>\n                <SelectControl\n                    name={'expirationdate_expiretype-' + props.postType}\n                    className={'pe-howtoexpire'}\n                    options={props.expireTypeList[props.postType]}\n                    description={props.text.fieldHowToExpireDescription}\n                    selected={settingHowToExpire}\n                    onChange={onChangeHowToExpire}\n                />\n\n                {(props.taxonomiesList.length > 0 && (['category', 'category-add', 'category-remove'].indexOf(settingHowToExpire) > -1)) &&\n                    <TokensControl\n                        label={props.text.fieldTerm}\n                        name={'expirationdate_terms-' + props.postType}\n                        options={termOptionsLabels}\n                        value={selectedTerms}\n                        isLoading={termsSelectIsLoading}\n                        onChange={onChangeTerms}\n                        description={props.text.fieldTermDescription}\n                    />\n                }\n            </SettingRow>\n        );\n\n        settingsRows.push(\n            <SettingRow label={props.text.fieldDefaultDateTimeOffset} key={'expired-custom-date-' + props.postType}>\n                <TextControl\n                    name={'expired-custom-date-' + props.postType}\n                    value={expireOffset}\n                    placeholder={props.settings.globalDefaultExpireOffset}\n                    description={props.text.fieldDefaultDateTimeOffsetDescription}\n                    unescapedDescription={true}\n                    onChange={onChangeExpireOffset}\n                />\n            </SettingRow>\n        );\n\n        settingsRows.push(\n            <SettingRow label={props.text.fieldWhoToNotify} key={'expirationdate_emailnotification-' + props.postType}>\n                <TextControl\n                    name={'expirationdate_emailnotification-' + props.postType}\n                    className=\"large-text\"\n                    value={emailNotification}\n                    description={props.text.fieldWhoToNotifyDescription}\n                    onChange={onChangeEmailNotification}\n                />\n            </SettingRow>\n        );\n    }\n\n    settingsRows = applyFilters('expirationdate_settings_posttype', settingsRows, props, isActive, useState);\n\n    return (\n        <SettingsFieldset legend={props.legend}>\n            <SettingsTable bodyChildren={settingsRows} />\n        </SettingsFieldset>\n    );\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\n\nimport { PostTypeSettingsPanel } from \"./\";\n\nexport const PostTypesSettingsPanels = function (props) {\n    let panels = [];\n\n    for (const [postType, postTypeSettings] of Object.entries(props.settings)) {\n        panels.push(\n            <PostTypeSettingsPanel\n                legend={postTypeSettings.label}\n                text={props.text}\n                postType={postType}\n                settings={postTypeSettings}\n                expireTypeList={props.expireTypeList}\n                taxonomiesList={props.taxonomiesList[postType]}\n                key={`${postType}-panel`}\n            />\n        );\n    }\n\n    return (panels);\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\nimport { Fragment } from \"&wp.element\";\nimport { SelectControl as WPSelectControl } from \"&wp.components\";\n\nexport const SelectControl = function (props) {\n    const onChange = (value) => {\n        props.onChange(value);\n    };\n\n    return (\n        <Fragment>\n            {props.options.length === 0 && (\n                <div>{props.noItemFoundMessage}</div>\n            )}\n\n            {props.options.length > 0 && (\n                <WPSelectControl\n                    label={props.label}\n                    name={props.name}\n                    id={props.name}\n                    className={props.className}\n                    value={props.selected}\n                    onChange={onChange}\n                    data-data={props.data}\n                    options={props.options}\n                />\n            )}\n\n            {props.children}\n\n            <p className=\"description\">{props.description}</p>\n        </Fragment>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\nimport { Fragment } from \"&wp.element\";\n\nexport const SettingRow = function (props) {\n    return (\n        <tr valign=\"top\">\n            <th scope=\"row\">\n                <label htmlFor=\"\">{props.label}</label>\n            </th>\n            <td>\n                {props.children}\n            </td>\n        </tr>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\n\nexport const SettingsFieldset = function (props) {\n    return (\n        <fieldset>\n                <legend>{props.legend}</legend>\n                {props.children}\n        </fieldset>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\n\nexport const SettingsForm = function (props) {\n    return (\n        <form method=\"post\">\n            {props.children}\n        </form>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\nimport { Fragment } from \"&wp.element\";\n\nexport const SettingsSection = function (props) {\n    return (\n        <Fragment>\n            <h2>{props.title}</h2>\n            <p>{props.description}</p>\n            {props.children}\n        </Fragment>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\n\nexport const SettingsTable = function (props) {\n    return (\n        <table className=\"form-table\">\n            <tbody>\n                {props.bodyChildren}\n            </tbody>\n        </table>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\n\nexport const SubmitButton = function (props) {\n    return (\n        <input\n            type=\"submit\"\n            name={props.name}\n            value={props.text}\n            className=\"button-primary\"\n        />\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\nimport { Fragment } from \"&wp.element\";\nimport { TextControl as WPTextControl } from \"&wp.components\";\n\nexport const TextControl = function (props) {\n    let description;\n\n    if (props.unescapedDescription) {\n        // If using this option, the HTML has to be escaped before injected into the JS interface.\n        description = <p className=\"description\" dangerouslySetInnerHTML={{ __html: props.description }}></p>;\n    } else {\n        description = <p className=\"description\">{props.description}</p>;\n    }\n\n    const onChange = function (value) {\n        if (props.onChange) {\n            props.onChange(value);\n        }\n    };\n\n    return (\n        <Fragment>\n            <WPTextControl\n                type=\"text\"\n                label={props.label}\n                name={props.name}\n                id={props.name}\n                className={props.className}\n                value={props.value}\n                placeholder={props.placeholder}\n                onChange={onChange}\n            />\n\n            {description}\n        </Fragment>\n    )\n}\n","import { Button } from '&wp.components';\n\nexport const ToggleArrowButton = function (props) {\n    const onClick = function () {\n        if (props.onClick) {\n            props.onClick();\n        }\n    };\n\n    const iconExpanded = props.iconExpanded ? props.iconExpanded : 'arrow-up-alt2';\n    const iconCollapsed = props.iconCollapsed ? props.iconCollapsed : 'arrow-down-alt2';\n\n    const icon = props.isExpanded ? iconExpanded : iconCollapsed;\n\n    const title = props.isExpanded ? props.titleExpanded : props.titleCollapsed;\n\n    return (\n        <Button\n            isSmall\n            title={title}\n            icon={icon}\n            onClick={onClick}\n            className={props.className}\n        />\n    )\n}\n","import { ToggleArrowButton } from \"./ToggleArrowButton\";\nimport { DateTimePicker } from \"./DateTimePicker\";\nimport { Fragment, useEffect } from \"&wp.element\";\n\nexport const ToggleCalendarDatePicker = (\n    {\n        isExpanded,\n        strings,\n        onToggleCalendar,\n        currentDate,\n        onChangeDate,\n        is12Hour,\n        startOfWeek\n    }\n) => {\n    useEffect(() => {\n        // Move the element of the toggle button to between the time and date elements.\n        const toggleButtonElement = document.querySelector('.future-action-calendar-toggle');\n\n        if (! toggleButtonElement) {\n            return;\n        }\n\n        const dateTimeElement = toggleButtonElement.nextElementSibling;\n\n        if (! dateTimeElement) {\n            return;\n        }\n\n        const timeElement = dateTimeElement.querySelector('.components-datetime__time');\n\n        if (! timeElement) {\n            return;\n        }\n\n        const dateElement = timeElement.nextSibling;\n\n        if (! dateElement) {\n            return;\n        }\n\n        dateTimeElement.insertBefore(toggleButtonElement, dateElement)\n    });\n\n    return (\n        <Fragment>\n            <ToggleArrowButton\n                className=\"future-action-calendar-toggle\"\n                isExpanded={isExpanded}\n                iconExpanded=\"arrow-up-alt2\"\n                iconCollapsed=\"calendar\"\n                titleExpanded={strings.hideCalendar}\n                titleCollapsed={strings.showCalendar}\n                onClick={onToggleCalendar} />\n\n            <DateTimePicker\n                currentDate={currentDate}\n                onChange={onChangeDate}\n                __nextRemoveHelpButton={true}\n                is12Hour={is12Hour}\n                startOfWeek={startOfWeek}\n            />\n        </Fragment>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\nimport { Fragment, useState, useEffect } from \"&wp.element\";\nimport { FormTokenField } from \"&wp.components\";\n\nexport const TokensControl = (props) => {\n    const [stringValue, setStringValue] = useState('');\n\n    useEffect(() => {\n        if (props.value) {\n            setStringValue(props.value.join(','));\n        }\n    }, [props.value]);\n\n    let description;\n\n    if (props.description) {\n        if (props.unescapedDescription) {\n            // If using this option, the HTML has to be escaped before injected into the JS interface.\n            description = <p className=\"description\" dangerouslySetInnerHTML={{__html: props.description}}></p>;\n        } else {\n            description = <p className=\"description\">{props.description}</p>;\n        }\n    }\n\n    const onChange = (value) => {\n        if (props.onChange) {\n            props.onChange(value);\n        }\n\n        if (typeof value === 'object') {\n            setStringValue(value.join(','));\n        } else {\n            setStringValue('');\n        }\n    }\n\n    const value = props.value ? props.value : [];\n \n    return (\n        <Fragment>\n            <FormTokenField\n                label={props.label}\n                value={value}\n                suggestions={props.options}\n                onChange={onChange}\n                maxSuggestions={10}\n                className=\"publishpres-future-token-field\"\n            />\n            <input type=\"hidden\" name={props.name} value={stringValue} />\n\n            {description}\n        </Fragment>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\n\nexport const TrueFalseControl = function (props) {\n    const { Fragment } = wp.element;\n\n    const onChange = (e) => {\n        if (props.onChange) {\n            props.onChange(\n                e.target.value === props.trueValue && jQuery(e.target).is(':checked')\n            );\n            // Check only the true radio... using the field name? or directly the ID\n        }\n    };\n\n    return (\n        <Fragment>\n            <input\n                type=\"radio\"\n                name={props.name}\n                id={props.name + '-true'}\n                value={props.trueValue}\n                defaultChecked={props.selected}\n                onChange={onChange}\n            />\n\n            <label htmlFor={props.name + '-true'}>{props.trueLabel}</label>\n            &nbsp;&nbsp;\n            <input\n                type=\"radio\"\n                name={props.name}\n                defaultChecked={!props.selected}\n                id={props.name + '-false'}\n                value={props.falseValue}\n                onChange={onChange}\n            />\n            <label\n                htmlFor={props.name + '-false'}>{props.falseLabel}</label>\n\n            <p className=\"description\">{props.description}</p>\n        </Fragment>\n    )\n}\n","export { ButtonsPanel } from \"./ButtonsPanel\";\nexport { FutureActionPanel } from \"./FutureActionPanel\";\nexport { FutureActionPanelBlockEditor } from \"./FutureActionPanelBlockEditor\";\nexport { FutureActionPanelClassicEditor } from \"./FutureActionPanelClassicEditor\";\nexport { FutureActionPanelQuickEdit } from \"./FutureActionPanelQuickEdit\";\nexport { FutureActionPanelBulkEdit } from \"./FutureActionPanelBulkEdit\";\nexport { PostTypeSettingsPanel } from \"./PostTypeSettingsPanel\";\nexport { PostTypesSettingsPanels } from \"./PostTypesSettingsPanels\";\nexport { SettingRow } from \"./SettingRow\";\nexport { SettingsFieldset } from \"./SettingsFieldset\";\nexport { SettingsForm } from \"./SettingsForm\";\nexport { SettingsSection } from \"./SettingsSection\";\nexport { SettingsTable } from \"./SettingsTable\";\nexport { SubmitButton } from \"./SubmitButton\";\nexport { CheckboxControl } from \"./CheckboxControl\";\nexport { SelectControl } from \"./SelectControl\";\nexport { TextControl } from \"./TextControl\";\nexport { TokensControl } from \"./TokensControl\";\nexport { NonceControl } from \"./NonceControl\";\nexport { TrueFalseControl } from \"./TrueFalseControl\";\n","import { formatUnixTimeToTimestamp, getCurrentTimeAsTimestamp, normalizeUnixTimeToSeconds } from './time';\nimport { isNumber } from './utils';\nimport { register, createReduxStore } from '&wp.data';\n\nexport const createStore = (props) => {\n    if (props.defaultState.terms && typeof props.defaultState.terms === 'string') {\n        props.defaultState.terms = props.defaultState.terms.split(',').map(term => parseInt(term));\n    }\n\n    let defaultState = {\n        action: props.defaultState.action,\n        date: props.defaultState.date ? props.defaultState.date : getCurrentTimeAsTimestamp(),\n        enabled: props.defaultState.autoEnable,\n        terms: props.defaultState.terms ? props.defaultState.terms : [],\n        taxonomy: props.defaultState.taxonomy ? props.defaultState.taxonomy : null,\n        termsListByName: null,\n        termsListById: null,\n        taxonomyName: null,\n        isFetchingTerms: false,\n        changeAction: 'no-change',\n        calendarIsVisible: true,\n    }\n\n    const store = createReduxStore(props.name, {\n        reducer(state = defaultState, action) {\n            switch (action.type) {\n                case 'SET_ACTION':\n                    return {\n                        ...state,\n                        action: action.action,\n                    };\n                case 'SET_DATE':\n                    // Make sure the date is a number, if it is a string with only numbers\n                    if (typeof action.date !== 'number' && isNumber(action.date)) {\n                        action.date = parseInt(action.date);\n                    }\n\n                    // If string, convert to unix time\n                    if (typeof action.date === 'string') {\n                        action.date = new Date(action.date).getTime();\n                    }\n\n                    // Make sure the time is always in seconds\n                    action.date = normalizeUnixTimeToSeconds(action.date);\n\n                    // Convert to formated string format, considering it is in the site's timezone\n                    action.date = formatUnixTimeToTimestamp(action.date);\n\n                    return {\n                        ...state,\n                        date: action.date,\n                    }\n                case 'SET_ENABLED':\n                    return {\n                        ...state,\n                        enabled: action.enabled,\n                    }\n                case 'SET_TERMS':\n                    return {\n                        ...state,\n                        terms: action.terms,\n                    }\n                case 'SET_TAXONOMY':\n                    return {\n                        ...state,\n                        taxonomy: action.taxonomy,\n                    }\n                case 'SET_TERMS_LIST_BY_NAME':\n                    return {\n                        ...state,\n                        termsListByName: action.termsListByName,\n                    }\n                case 'SET_TERMS_LIST_BY_ID':\n                    return {\n                        ...state,\n                        termsListById: action.termsListById,\n                    }\n                case 'SET_TAXONOMY_NAME':\n                    return {\n                        ...state,\n                        taxonomyName: action.taxonomyName,\n                    }\n                case 'SET_CHANGE_ACTION':\n                    return {\n                        ...state,\n                        changeAction: action.changeAction,\n                    }\n                case 'SET_CALENDAR_IS_VISIBLE':\n                    return {\n                        ...state,\n                        calendarIsVisible: action.calendarIsVisible,\n                    }\n            }\n\n            return state;\n        },\n        actions: {\n            setAction(action) {\n                return {\n                    type: 'SET_ACTION',\n                    action: action\n                };\n            },\n            setDate(date) {\n                return {\n                    type: 'SET_DATE',\n                    date: date\n                };\n            },\n            setEnabled(enabled) {\n                return {\n                    type: 'SET_ENABLED',\n                    enabled: enabled\n                };\n            },\n            setTerms(terms) {\n                return {\n                    type: 'SET_TERMS',\n                    terms: terms\n                };\n            },\n            setTaxonomy(taxonomy) {\n                return {\n                    type: 'SET_TAXONOMY',\n                    taxonomy: taxonomy\n                };\n            },\n            setTermsListByName(termsListByName) {\n                return {\n                    type: 'SET_TERMS_LIST_BY_NAME',\n                    termsListByName: termsListByName\n                };\n            },\n            setTermsListById(termsListById) {\n                return {\n                    type: 'SET_TERMS_LIST_BY_ID',\n                    termsListById: termsListById\n                };\n            },\n            setTaxonomyName(taxonomyName) {\n                return {\n                    type: 'SET_TAXONOMY_NAME',\n                    taxonomyName: taxonomyName\n                };\n            },\n            setIsFetchingTerms(isFetchingTerms) {\n                return {\n                    type: 'SET_IS_FETCHING_TERMS',\n                    isFetchingTerms: isFetchingTerms\n                }\n            },\n            setChangeAction(changeAction) {\n                return {\n                    type: 'SET_CHANGE_ACTION',\n                    changeAction: changeAction\n                }\n            },\n            setCalendarIsVisible(calendarIsVisible) {\n                return {\n                    type: 'SET_CALENDAR_IS_VISIBLE',\n                    calendarIsVisible: calendarIsVisible\n                }\n            }\n        },\n        selectors: {\n            getAction(state) {\n                return state.action;\n            },\n            getDate(state) {\n                return state.date;\n            },\n            getEnabled(state) {\n                return state.enabled;\n            },\n            getTerms(state) {\n                return state.terms;\n            },\n            getTaxonomy(state) {\n                return state.taxonomy;\n            },\n            getTermsListByName(state) {\n                return state.termsListByName;\n            },\n            getTermsListById(state) {\n                return state.termsListById;\n            },\n            getTaxonomyName(state) {\n                return state.taxonomyName;\n            },\n            getIsFetchingTerms(state) {\n                return state.isFetchingTerms;\n            },\n            getChangeAction(state) {\n                return state.changeAction;\n            },\n            getCalendarIsVisible(state) {\n                return state.calendarIsVisible;\n            }\n        }\n    });\n\n    register(store);\n\n    return store;\n}\n","export const getCurrentTimeInSeconds = () => {\n    return normalizeUnixTimeToSeconds(new Date().getTime());\n}\n\nexport const getCurrentTimeAsTimestamp = () => {\n    return formatUnixTimeToTimestamp(getCurrentTimeInSeconds());\n}\n\nexport const formatUnixTimeToTimestamp = (unixTimestamp) => {\n    const date = new Date(\n        normalizeUnixTimeToSeconds(unixTimestamp)\n    );\n\n    const year = date.getFullYear();\n    const month = (\"0\" + (date.getMonth() + 1)).slice(-2); // Months are zero-based\n    const day = (\"0\" + date.getDate()).slice(-2);\n    const hours = (\"0\" + date.getHours()).slice(-2);\n    const minutes = (\"0\" + date.getMinutes()).slice(-2);\n    const seconds = (\"0\" + date.getSeconds()).slice(-2);\n\n    return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\n}\n\nexport const formatTimestampToUnixTime = (time) => {\n    const date = new Date(time);\n\n    return normalizeUnixTimeToSeconds(date.getTime());\n}\n\nexport const timeIsInSeconds = (time) => {\n    return parseInt(time).toString().length <= 10;\n}\n\nexport const normalizeUnixTimeToSeconds = (time) => {\n    time = parseInt(time);\n\n    return timeIsInSeconds() ? time : time / 1000;\n}\n\nexport const normalizeUnixTimeToMilliseconds = (time) => {\n    time = parseInt(time);\n\n    return timeIsInSeconds() ? time * 1000 : time;\n}\n","export const compact = (array) => {\n    if (!array) {\n        return [];\n    }\n\n    if (! Array.isArray(array) && typeof array === 'object') {\n        array = Object.values(array);\n    }\n\n    return array.filter((item) => {\n        return item !== null && item !== undefined && item !== '';\n    });\n}\n\nexport const debugLogFactory = (config) => {\n    return (description, ...message) => {\n        if (console && config.isDebugEnabled) {\n            console.debug('[Future]', description, ...message);\n        }\n    }\n}\n\nexport const isGutenbergEnabled = () => {\n    return document.body.classList.contains('block-editor-page');\n}\n\nexport const getElementByName = (name) => {\n    return document.getElementsByName(name)[0];\n}\n\nexport const getFieldByName = (name, postId) => {\n    return document.querySelector(`#the-list tr#post-${postId} .column-expirationdate input#future_action_${name}-${postId}`);\n}\n\nexport const getFieldValueByName = (name, postId) => {\n    const field = getFieldByName(name, postId);\n\n    if (!field) {\n        return null;\n    }\n\n    return field.value;\n};\n\nexport const getFieldValueByNameAsArrayOfInt = (name, postId) => {\n    const field = getFieldByName(name, postId);\n\n    if (!field || !field.value) {\n        return [];\n    }\n\n    if (typeof field.value === 'number') {\n        field.value = field.value.toString();\n    }\n\n    return field.value.split(',').map(term => parseInt(term));\n};\n\nexport const getFieldValueByNameAsBool = (name, postId) => {\n    const field = getFieldByName(name, postId);\n\n    if (!field) {\n        return false;\n    }\n\n    return field.value === '1' || field.value === 'true';\n}\n\nexport const getActionSettingsFromColumnData = (postId) => {\n    const columnData = document.querySelector(`#post-expire-column-${postId}`);\n\n    return {\n        enabled: columnData.dataset.actionEnabled === '1',\n        action: columnData.dataset.actionType,\n        date: columnData.dataset.actionDate,\n        dateUnix: columnData.dataset.actionDateUnix,\n        taxonomy: columnData.dataset.actionTaxonomy,\n        terms: columnData.dataset.actionTerms,\n    };\n}\n\n/**\n * This function is used to determine if a value is a number, including strings.\n *\n * @param {*} value\n * @returns\n */\nexport const isNumber = (value) => {\n    return !isNaN(value);\n}\n","module.exports = ReactDOM;","module.exports = publishpressFutureQuickEditConfig;","module.exports = window;","module.exports = wp;","module.exports = wp.components;","module.exports = wp.data;","module.exports = wp.element;","module.exports = wp.hooks;","module.exports = wp.url;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { FutureActionPanelQuickEdit } from './components';\nimport { createStore } from './data';\nimport { getActionSettingsFromColumnData } from './utils';\nimport { createRoot } from '&wp.element';\nimport { select, dispatch } from '&wp.data';\nimport { inlineEditPost } from \"&window\";\nimport {\n    postType,\n    isNewPost,\n    actionsSelectOptions,\n    is12Hour,\n    startOfWeek,\n    strings,\n    taxonomyName,\n    nonce\n} from \"&config/quick-edit\";\nimport { render } from \"&ReactDOM\";\n\nconst storeName = 'publishpress-future/future-action-quick-edit';\nconst delayToUnmountAfterSaving = 1000;\n\n// We create a copy of the WP inline edit post function\nconst wpInlineEdit = inlineEditPost.edit;\nconst wpInlineEditRevert = inlineEditPost.revert;\n\nconst getPostIdFromButton = (id) => {\n    // If id is a string or a number, return it directly\n    if (typeof id === 'string' || typeof id === 'number') {\n        return id;\n    }\n\n    // Otherwise, assume it's an HTML element and extract the post ID\n    const trElement = id.closest('tr');\n    const trId = trElement.id;\n    const postId = trId.split('-')[1];\n\n    return postId;\n}\n\n/**\n * We override the function with our own code so we can detect when\n * the inline edit row is displayed to recreate the React component.\n */\ninlineEditPost.edit = function (button, id) {\n    // Call the original WP edit function.\n    wpInlineEdit.apply(this, arguments);\n\n    const postId = getPostIdFromButton(button);\n    const data = getActionSettingsFromColumnData(postId);\n\n    const enabled = data.enabled;\n    const action = data.action;\n    const date = data.date;\n    const taxonomy = data.taxonomy;\n    let terms = data.terms;\n\n    if (typeof terms === 'string'){\n        terms = terms.split(',');\n    }\n\n    // if store exists, update the state. Otherwise, create it.\n    if (select(storeName)) {\n        dispatch(storeName).setEnabled(enabled);\n        dispatch(storeName).setAction(action);\n        dispatch(storeName).setDate(date);\n        dispatch(storeName).setTaxonomy(taxonomy);\n        dispatch(storeName).setTerms(terms);\n    } else {\n        createStore({\n            name: storeName,\n            defaultState: {\n                autoEnable: enabled,\n                action: action,\n                date: date,\n                taxonomy: taxonomy,\n                terms: terms,\n            }\n        });\n    }\n\n    const container = document.getElementById(\"publishpress-future-quick-edit\");\n\n    if (createRoot) {\n        const root = createRoot(container);\n\n        const saveButton = document.querySelector('.inline-edit-save .save');\n        if (saveButton) {\n            saveButton.onclick = function() {\n                setTimeout(() => {\n                    root.unmount();\n                }, delayToUnmountAfterSaving);\n            };\n        }\n\n        root.render(\n            <FutureActionPanelQuickEdit\n                storeName={storeName}\n                postType={postType}\n                isNewPost={isNewPost}\n                actionsSelectOptions={actionsSelectOptions}\n                is12Hour={is12Hour}\n                startOfWeek={startOfWeek}\n                strings={strings}\n                taxonomyName={taxonomyName}\n                nonce={nonce}\n            />\n        );\n\n        inlineEditPost.revert = function () {\n            root.unmount();\n\n            // Call the original WP revert function.\n            wpInlineEditRevert.apply(this, arguments);\n        };\n    } else {\n        render(\n            <FutureActionPanelQuickEdit\n                storeName={storeName}\n                postType={postType}\n                isNewPost={isNewPost}\n                actionsSelectOptions={actionsSelectOptions}\n                is12Hour={is12Hour}\n                startOfWeek={startOfWeek}\n                strings={strings}\n                taxonomyName={taxonomyName}\n                nonce={nonce}\n            />,\n            container\n        );\n    }\n};\n"],"names":["ButtonsPanel","props","children","CheckboxControl","checked","setChecked","description","unescapedDescription","__html","onChange","value","label","name","className","DateTimePicker","currentDate","is12Hour","startOfWeek","wp","components","PanelRow","SelectControl","FormTokenField","Spinner","BaseControl","element","Fragment","useEffect","decodeEntities","htmlEntities","addQueryArgs","url","data","useSelect","useDispatch","apiFetch","FutureActionPanel","action","select","storeName","getAction","date","getDate","enabled","getEnabled","terms","getTerms","taxonomy","getTaxonomy","taxonomyName","getTaxonomyName","termsListByName","getTermsListByName","termsListById","getTermsListById","isFetchingTerms","getIsFetchingTerms","calendarIsVisible","getCalendarIsVisible","setAction","setDate","setEnabled","setTerms","setTaxonomy","setTermsListByName","setTermsListById","setTaxonomyName","setIsFetchingTerms","setCalendarIsVisible","mapTermsListById","map","term","insertTerm","id","count","link","slug","mapTermsListByName","callOnChangeData","attribute","onChangeData","handleEnabledChange","isChecked","fetchTerms","handleActionChange","handleDateChange","handleTermsChange","postType","path","per_page","then","list","forEach","cat","strings","category","response","parseInt","context","taxonomyAttributes","rest_base","storeCalendarIsVisibleOnStorage","localStorage","setItem","getCalendarIsVisibleFromStorage","getItem","autoEnableAndHideCheckbox","isCleanNewPost","selectedTerms","length","termsListByNameKeys","Object","keys","panelClass","contentPanelClass","datePanelClass","replaceCurlyBracketsWithLink","string","href","target","parts","split","result","push","shift","part","before","after","HelpText","timezoneSettingsHelp","enablePostExpiration","actionsSelectOptions","String","includes","loading","noTaxonomyFound","noTermsFound","FutureActionPanelBlockEditor","PluginDocumentSettingPanel","editPost","editPostAttribute","newAttribute","publishpress_future_action","entries","store","getEditedPostAttribute","panelTitle","postTypeDefaultConfig","autoEnable","FutureActionPanelBulkEdit","join","changeAction","getChangeAction","setChangeAction","termsString","handleStrategyChange","options","noChange","changeAdd","addOnly","changeOnly","removeOnly","optionsToDisplayPanel","futureActionUpdate","isNewPost","nonce","FutureActionPanelClassicEditor","browserTimezoneOffset","Date","getTimezoneOffset","getElementByName","document","getElementsByName","FutureActionPanelQuickEdit","NonceControl","referrer","PostTypeSettingsPanel","settings","postTypeTaxonomy","setPostTypeTaxonomy","termOptions","setTermOptions","termsSelectIsLoading","setTermsSelectIsLoading","setSelectedTerms","howToExpire","settingHowToExpire","setSettingHowToExpire","active","isActive","setIsActive","defaultExpireOffset","expireOffset","setExpireOffset","emailNotification","setEmailNotification","autoEnabled","isAutoEnabled","setIsAutoEnabled","onChangeTaxonomy","onChangeTerms","onChangeHowToExpire","onChangeActive","onChangeExpireOffset","onChangeEmailNotification","onChangeAutoEnabled","updateTermsOptionsState","settingsTermsOptions","option","taxonomiesList","taxAttributes","catch","error","console","debug","termOptionsLabels","settingsRows","text","fieldActive","fieldActiveLabel","fieldAutoEnable","fieldAutoEnableLabel","fieldTaxonomy","noItemsfound","expireTypeList","filter","item","indexOf","fieldHowToExpire","fieldHowToExpireDescription","fieldTerm","fieldTermDescription","fieldDefaultDateTimeOffset","globalDefaultExpireOffset","fieldDefaultDateTimeOffsetDescription","fieldWhoToNotify","fieldWhoToNotifyDescription","useState","legend","PostTypesSettingsPanels","panels","postTypeSettings","noItemFoundMessage","selected","SettingRow","SettingsFieldset","SettingsForm","SettingsSection","title","SettingsTable","bodyChildren","SubmitButton","TextControl","placeholder","ToggleArrowButton","onClick","iconExpanded","iconCollapsed","icon","isExpanded","titleExpanded","titleCollapsed","ToggleCalendarDatePicker","onToggleCalendar","onChangeDate","toggleButtonElement","querySelector","dateTimeElement","nextElementSibling","timeElement","dateElement","nextSibling","insertBefore","hideCalendar","showCalendar","TokensControl","stringValue","setStringValue","TrueFalseControl","e","trueValue","jQuery","is","trueLabel","falseValue","falseLabel","createStore","defaultState","reducer","state","type","getTime","actions","selectors","getCurrentTimeInSeconds","normalizeUnixTimeToSeconds","getCurrentTimeAsTimestamp","formatUnixTimeToTimestamp","unixTimestamp","year","getFullYear","month","getMonth","slice","day","hours","getHours","minutes","getMinutes","seconds","getSeconds","formatTimestampToUnixTime","time","timeIsInSeconds","toString","normalizeUnixTimeToMilliseconds","compact","array","Array","isArray","values","undefined","debugLogFactory","config","message","isDebugEnabled","isGutenbergEnabled","body","classList","contains","getFieldByName","postId","getFieldValueByName","field","getFieldValueByNameAsArrayOfInt","getFieldValueByNameAsBool","getActionSettingsFromColumnData","columnData","dataset","actionEnabled","actionType","actionDate","dateUnix","actionDateUnix","actionTaxonomy","actionTerms","isNumber","isNaN","delayToUnmountAfterSaving","wpInlineEdit","inlineEditPost","edit","wpInlineEditRevert","revert","getPostIdFromButton","trElement","closest","trId","button","apply","arguments","container","getElementById","createRoot","root","saveButton","onclick","setTimeout","unmount","render"],"sourceRoot":""}