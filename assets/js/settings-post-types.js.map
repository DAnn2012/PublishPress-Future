{"version":3,"file":"settings-post-types.js","mappings":"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","sources":["webpack://post-expirator/./assets/jsx/components/ButtonsPanel.jsx","webpack://post-expirator/./assets/jsx/components/CheckboxControl.jsx","webpack://post-expirator/./assets/jsx/components/DateTimePicker.jsx","webpack://post-expirator/./assets/jsx/components/FutureActionPanel.jsx","webpack://post-expirator/./assets/jsx/components/FutureActionPanelBlockEditor.jsx","webpack://post-expirator/./assets/jsx/components/FutureActionPanelBulkEdit.jsx","webpack://post-expirator/./assets/jsx/components/FutureActionPanelClassicEditor.jsx","webpack://post-expirator/./assets/jsx/components/FutureActionPanelQuickEdit.jsx","webpack://post-expirator/./assets/jsx/components/NonceControl.jsx","webpack://post-expirator/./assets/jsx/components/PostTypeSettingsPanel.jsx","webpack://post-expirator/./assets/jsx/components/PostTypesSettingsPanels.jsx","webpack://post-expirator/./assets/jsx/components/SelectControl.jsx","webpack://post-expirator/./assets/jsx/components/SettingRow.jsx","webpack://post-expirator/./assets/jsx/components/SettingsFieldset.jsx","webpack://post-expirator/./assets/jsx/components/SettingsForm.jsx","webpack://post-expirator/./assets/jsx/components/SettingsSection.jsx","webpack://post-expirator/./assets/jsx/components/SettingsTable.jsx","webpack://post-expirator/./assets/jsx/components/SubmitButton.jsx","webpack://post-expirator/./assets/jsx/components/TextControl.jsx","webpack://post-expirator/./assets/jsx/components/ToggleArrowButton.jsx","webpack://post-expirator/./assets/jsx/components/ToggleCalendarDatePicker.jsx","webpack://post-expirator/./assets/jsx/components/TokensControl.jsx","webpack://post-expirator/./assets/jsx/components/TrueFalseControl.jsx","webpack://post-expirator/./assets/jsx/components/index.jsx","webpack://post-expirator/./assets/jsx/time.jsx","webpack://post-expirator/./assets/jsx/utils.jsx","webpack://post-expirator/external var \"ReactDOM\"","webpack://post-expirator/external var \"publishpressFutureSettingsConfig\"","webpack://post-expirator/external var \"wp\"","webpack://post-expirator/external var \"wp.components\"","webpack://post-expirator/external var \"wp.data\"","webpack://post-expirator/external var \"wp.element\"","webpack://post-expirator/external var \"wp.hooks\"","webpack://post-expirator/external var \"wp.url\"","webpack://post-expirator/webpack/bootstrap","webpack://post-expirator/./assets/jsx/settings-post-types.jsx"],"sourcesContent":["/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\n\nexport const ButtonsPanel = function (props) {\n    return (\n        <div>\n            {props.children}\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\nimport { Fragment, useState  } from \"&wp.element\";\nimport { CheckboxControl as WPCheckboxControl } from \"&wp.components\";\n\nexport const CheckboxControl = function (props) {\n    const [checked, setChecked] = useState(props.checked || false);\n\n    let description;\n\n    if (props.unescapedDescription) {\n        // If using this option, the HTML has to be escaped before injected into the JS interface.\n        description = <p className=\"description\" dangerouslySetInnerHTML={{ __html: props.description }}></p>;\n    } else {\n        description = <p className=\"description\">{props.description}</p>;\n    }\n\n    const onChange = function (value) {\n        setChecked(value);\n\n        if (props.onChange) {\n            props.onChange(value);\n        }\n    };\n\n    return (\n        <Fragment>\n            <WPCheckboxControl\n                label={props.label}\n                name={props.name}\n                id={props.name}\n                className={props.className}\n                checked={checked || false}\n                onChange={onChange}\n            />\n\n            {description}\n        </Fragment>\n    )\n}\n","import { normalizeUnixTimeToMilliseconds } from \"../time\";\nimport { DateTimePicker as WPDateTimePicker } from \"&wp.components\";\n\n\nexport const DateTimePicker = ({currentDate, onChange, is12Hour, startOfWeek}) => {\n    if (typeof currentDate === 'number') {\n        currentDate = normalizeUnixTimeToMilliseconds(currentDate);\n    }\n\n    return (\n        <WPDateTimePicker\n            currentDate={currentDate}\n            onChange={onChange}\n            __nextRemoveHelpButton={true}\n            is12Hour={is12Hour}\n            startOfWeek={startOfWeek}\n        />\n    )\n}\n","import { compact } from '../utils';\nimport { ToggleCalendarDatePicker } from './ToggleCalendarDatePicker';\n\nconst { PanelRow, CheckboxControl, SelectControl, FormTokenField, Spinner, BaseControl } = wp.components;\nconst { Fragment, useEffect, useState } = wp.element;\nconst { decodeEntities } = wp.htmlEntities;\nconst { addQueryArgs } = wp.url;\nconst {\n    useSelect,\n    useDispatch\n} = wp.data;\nconst { apiFetch } = wp;\n\nexport const FutureActionPanel = (props) => {\n    const action = useSelect((select) => select(props.storeName).getAction(), []);\n    const date = useSelect((select) => select(props.storeName).getDate(), []);\n    const enabled = useSelect((select) => select(props.storeName).getEnabled(), []);\n    const terms = useSelect((select) => select(props.storeName).getTerms(), []);\n    const taxonomy = useSelect((select) => select(props.storeName).getTaxonomy(), []);\n    const taxonomyName = useSelect((select) => select(props.storeName).getTaxonomyName(), []);\n    const termsListByName = useSelect((select) => select(props.storeName).getTermsListByName(), []);\n    const termsListById = useSelect((select) => select(props.storeName).getTermsListById(), []);\n    const isFetchingTerms = useSelect((select) => select(props.storeName).getIsFetchingTerms(), []);\n    const calendarIsVisible = useSelect((select) => select(props.storeName).getCalendarIsVisible(), []);\n    const hasValidData = useSelect((select) => select(props.storeName).getHasValidData(), []);\n\n    const [validationError, setValidationError] = useState('');\n\n    const {\n        setAction,\n        setDate,\n        setEnabled,\n        setTerms,\n        setTaxonomy,\n        setTermsListByName,\n        setTermsListById,\n        setTaxonomyName,\n        setIsFetchingTerms,\n        setCalendarIsVisible,\n        setHasValidData\n    } = useDispatch(props.storeName);\n\n    const mapTermsListById = (terms) => {\n        if (typeof terms !== 'object' || terms === null) {\n            return {};\n        }\n\n        return terms.map((term) => {\n            return termsListById[term];\n        });\n    }\n\n    const insertTerm = (term) => {\n        termsListByName[term] = {id: term, count: 0, description: \"\", link: \"\", name: term, slug: term, taxonomy: taxonomy};\n        termsListById[term] = term;\n        setTermsListByName(termsListByName);\n        setTermsListById(termsListById);\n        setTerms([...terms, term]);\n\n    }\n\n    const mapTermsListByName = (terms) => {\n        if (typeof terms !== 'object' || terms === null) {\n            return {};\n        }\n\n        return terms.map((term) => {\n            if (termsListByName[term]) {\n                return termsListByName[term].id;\n            }\n\n            insertTerm(term);\n\n            return term;\n        });\n    }\n\n    const callOnChangeData = (attribute, value) => {\n        if (typeof props.onChangeData === 'function') {\n            props.onChangeData(attribute, value);\n        }\n    }\n\n    const handleEnabledChange = (isChecked) => {\n        setEnabled(isChecked);\n\n        if (isChecked) {\n            setAction(props.action);\n            setDate(props.date);\n            setTerms(props.terms);\n            setTaxonomy(props.taxonomy);\n\n            fetchTerms();\n        }\n\n        callOnChangeData('enabled', isChecked);\n    }\n\n    const handleActionChange = (value) => {\n        setAction(value);\n\n        callOnChangeData('action', value);\n    }\n\n    const handleDateChange = (value) => {\n        setDate(value);\n\n        callOnChangeData('date', value);\n    }\n\n    const handleTermsChange = (value) => {\n        value = mapTermsListByName(value);\n\n        setTerms(value);\n\n        callOnChangeData('terms', value);\n    }\n\n    const fetchTerms = () => {\n        let termsListByName = {};\n        let termsListById = {};\n\n        if (!taxonomy) {\n            return;\n        }\n\n        setIsFetchingTerms(true);\n\n        apiFetch({\n            path: addQueryArgs(`publishpress-future/v1/terms/${taxonomy}`),\n        }).then((result) => {\n            result.terms.forEach(term => {\n                termsListByName[decodeEntities(term.name)] = term;\n                termsListById[term.id] = decodeEntities(term.name);\n            });\n\n            setTermsListByName(termsListByName);\n            setTermsListById(termsListById);\n            setTaxonomyName(decodeEntities(result.taxonomyName));\n            setIsFetchingTerms(false);\n        });\n    }\n\n    const storeCalendarIsVisibleOnStorage = (value) => {\n        localStorage.setItem('FUTURE_ACTION_CALENDAR_IS_VISIBLE_' + props.context, value ? '1' : '0');\n    }\n\n    const getCalendarIsVisibleFromStorage = () => {\n        return localStorage.getItem('FUTURE_ACTION_CALENDAR_IS_VISIBLE_' + props.context);\n    }\n\n    useEffect(() => {\n        if (props.autoEnableAndHideCheckbox)  {\n            setEnabled(true);\n        } else {\n            setEnabled(props.enabled);\n        }\n\n        setAction(props.action);\n        setDate(props.date);\n        setTerms(props.terms);\n        setTaxonomy(props.taxonomy);\n\n        if (getCalendarIsVisibleFromStorage() === null) {\n            setCalendarIsVisible(props.calendarIsVisible);\n        } else {\n            setCalendarIsVisible(getCalendarIsVisibleFromStorage() === '1');\n        }\n\n        // We need to get the value directly from the props because the value from the store is not updated yet\n        if (props.enabled) {\n            if (props.isCleanNewPost) {\n                // Force populate the default values\n                handleEnabledChange(true);\n            }\n\n            fetchTerms();\n        }\n    }, []);\n\n    useEffect(() => {\n        storeCalendarIsVisibleOnStorage(calendarIsVisible);\n    }, [calendarIsVisible]);\n\n    let selectedTerms = [];\n    if (terms && terms.length > 0 && termsListById) {\n        selectedTerms = compact(mapTermsListById(terms));\n\n        if (typeof selectedTerms === 'string') {\n            selectedTerms = [];\n        }\n    }\n\n    let termsListByNameKeys = [];\n    if (typeof termsListByName === 'object' && termsListByName !== null) {\n        termsListByNameKeys = Object.keys(termsListByName);\n    }\n\n    const panelClass = calendarIsVisible ? 'future-action-panel' : 'future-action-panel hidden-calendar';\n    const contentPanelClass = calendarIsVisible ? 'future-action-panel-content' : 'future-action-panel-content hidden-calendar';\n    const datePanelClass = calendarIsVisible ? 'future-action-date-panel' : 'future-action-date-panel hidden-calendar';\n\n    let is24hour;\n    if (props.timeFormat === 'inherited') {\n        is24hour = ! props.is12Hour;\n    } else {\n        is24hour = props.timeFormat === '24h';\n    }\n\n\n    const replaceCurlyBracketsWithLink = (string, href, target) => {\n        const parts = string.split('{');\n        const result = [];\n\n        result.push(parts.shift());\n\n        for (const part of parts) {\n            const [before, after] = part.split('}');\n\n            result.push(\n                <a href={href} target={target} key={href}>{before}</a>\n            );\n\n            result.push(after);\n        }\n\n        return result;\n    };\n\n    // Remove items from actions list if related to taxonomies and there is no taxonmoy for the post type\n    let actionsSelectOptions = props.actionsSelectOptions;\n    if (! props.taxonomy) {\n        actionsSelectOptions = props.actionsSelectOptions.filter((item) => {\n            return ['category', 'category-add', 'category-remove', 'category-remove-all'].indexOf(item.value) === -1;\n        });\n    }\n\n    const HelpText = replaceCurlyBracketsWithLink(props.strings.timezoneSettingsHelp, '/wp-admin/options-general.php#timezone_string', '_blank');\n    const displayTaxonomyField = String(action).includes('category') && action !== 'category-remove-all';\n\n    let termsFieldLabel = taxonomyName;\n    switch (action) {\n        case 'category':\n            termsFieldLabel = props.strings.newTerms.replace('%s', taxonomyName);\n            break;\n        case 'category-remove':\n            termsFieldLabel = props.strings.removeTerms.replace('%s', taxonomyName);\n            break;\n        case 'category-add':\n            termsFieldLabel = props.strings.addTerms.replace('%s', taxonomyName);\n            break;\n    }\n\n    const validateData = () => {\n        let valid = true;\n\n        if (! enabled) {\n            setValidationError('');\n            return true;\n        }\n\n        if (! action) {\n            setValidationError(props.strings.errorActionRequired);\n            valid = false;\n        }\n\n        if (! date) {\n            setValidationError(props.strings.errorDateRequired);\n            valid = false;\n        }\n\n        const isTermRequired = ['category', 'category-add', 'category-remove'].includes(action);\n        const noTermIsSelected = terms.length === 0 || (terms.length === 1 && (terms[0] === '' || terms[0] === '0'));\n\n        if (isTermRequired && noTermIsSelected) {\n            setValidationError(props.strings.errorTermsRequired);\n            valid = false;\n        }\n\n        if (valid) {\n            setValidationError('');\n        }\n\n        return valid;\n    }\n\n    useEffect(() => {\n        if (! enabled) {\n            setHasValidData(true);\n            setValidationError('');\n\n            return;\n        }\n\n        setHasValidData(validateData());\n    }, [action, date, enabled, terms, taxonomy]);\n\n    return (\n        <div className={panelClass}>\n            {props.autoEnableAndHideCheckbox && (\n                <input type=\"hidden\" name={'future_action_enabled'} value={1} />\n            )}\n\n            {! props.autoEnableAndHideCheckbox && (\n                <PanelRow>\n                    <CheckboxControl\n                        label={props.strings.enablePostExpiration}\n                        checked={enabled || false}\n                        onChange={handleEnabledChange}\n                    />\n                </PanelRow>\n            )}\n\n            {enabled && (\n                <Fragment>\n                    <PanelRow className={contentPanelClass + ' future-action-full-width'}>\n                        <SelectControl\n                            label={props.strings.action}\n                            value={action}\n                            options={actionsSelectOptions}\n                            onChange={handleActionChange}\n                        />\n                    </PanelRow>\n\n                    {\n                        displayTaxonomyField && (\n                            isFetchingTerms && (\n                                <PanelRow>\n                                    <BaseControl label={taxonomyName}>\n                                        {`${props.strings.loading} (${taxonomyName})`}\n                                        <Spinner />\n                                    </BaseControl>\n                                </PanelRow>\n                            )\n                            || (!taxonomy && (\n                                <PanelRow>\n                                    <BaseControl label={taxonomyName} className=\"future-action-warning\">\n                                        <div>\n                                            <i className=\"dashicons dashicons-warning\"></i> {props.strings.noTaxonomyFound}\n                                        </div>\n                                    </BaseControl>\n                                </PanelRow>\n                            )\n                                || (\n                                    termsListByNameKeys.length === 0 && (\n                                        <PanelRow>\n                                            <BaseControl label={taxonomyName} className=\"future-action-warning\">\n                                                <div>\n                                                    <i className=\"dashicons dashicons-warning\"></i> {props.strings.noTermsFound}\n                                                </div>\n                                            </BaseControl>\n                                        </PanelRow>\n                                    )\n                                    || (\n                                        <PanelRow className=\"future-action-full-width\">\n                                            <BaseControl>\n                                                <FormTokenField\n                                                    label={termsFieldLabel}\n                                                    value={selectedTerms}\n                                                    suggestions={termsListByNameKeys}\n                                                    onChange={handleTermsChange}\n                                                    placeholder={props.strings.addTermsPlaceholder}\n                                                    maxSuggestions={1000}\n                                                    __experimentalExpandOnFocus={true}\n                                                    __experimentalAutoSelectFirstMatch={true}\n                                                />\n                                            </BaseControl>\n                                        </PanelRow>\n                                    )\n                                )\n                            )\n                        )\n                    }\n\n                    <PanelRow className={datePanelClass}>\n                        <ToggleCalendarDatePicker\n                            currentDate={date}\n                            onChangeDate={handleDateChange}\n                            onToggleCalendar={() => setCalendarIsVisible(!calendarIsVisible)}\n                            is12Hour={!is24hour}\n                            startOfWeek={props.startOfWeek}\n                            isExpanded={calendarIsVisible}\n                            strings={props.strings}\n                        />\n                    </PanelRow>\n\n                    <PanelRow>\n                        <div className=\"future-action-help-text\">\n                            <hr />\n\n                            <span className=\"dashicons dashicons-info\"></span> {HelpText}\n                        </div>\n                    </PanelRow>\n\n                    {! hasValidData && (\n                        <PanelRow>\n                            <BaseControl label={props.strings.validationError} className=\"future-action-error\">\n                                <div>\n                                    <i className=\"dashicons dashicons-warning\"></i> {validationError}\n                                </div>\n                            </BaseControl>\n                        </PanelRow>\n                    )}\n                </Fragment>\n            )}\n        </div>\n    );\n};\n","import { FutureActionPanel } from './';\n\nexport const FutureActionPanelBlockEditor = (props) => {\n    const { PluginDocumentSettingPanel } = wp.editPost;\n    const { useDispatch, select } = wp.data;\n\n    const { editPost } = useDispatch('core/editor');\n\n    const editPostAttribute = (newAttribute) => {\n        const attribute = {\n            publishpress_future_action: {}\n        };\n\n        // For each property on newAttribute, set the value on attribute\n        for (const [name, value] of Object.entries(newAttribute)) {\n            attribute.publishpress_future_action[name] = value;\n        }\n\n        editPost(attribute);\n    }\n\n    const onChangeData = (attribute, value) => {\n        const store = select(props.storeName);\n\n        const newAttribute = {\n            'enabled': store.getEnabled()\n        }\n\n        if (newAttribute.enabled) {\n            newAttribute['action'] = store.getAction();\n            newAttribute['date'] = store.getDate();\n            newAttribute['terms'] = store.getTerms();\n            newAttribute['taxonomy'] = store.getTaxonomy();\n        }\n\n        editPostAttribute(newAttribute);\n    }\n\n    const data = select('core/editor').getEditedPostAttribute('publishpress_future_action');\n\n    return (\n        <PluginDocumentSettingPanel\n            name={'publishpress-future-action-panel'}\n            title={props.strings.panelTitle}\n            icon=\"calendar\"\n            initialOpen={props.postTypeDefaultConfig.autoEnable}\n            className={'post-expirator-panel'}>\n            <div id='publishpress-future-block-editor'>\n                <FutureActionPanel\n                    context={'block-editor'}\n                    postType={props.postType}\n                    isCleanNewPost={props.isCleanNewPost}\n                    actionsSelectOptions={props.actionsSelectOptions}\n                    enabled={data.enabled}\n                    calendarIsVisible={true}\n                    action={data.action}\n                    date={data.date}\n                    terms={data.terms}\n                    taxonomy={data.taxonomy}\n                    taxonomyName={props.taxonomyName}\n                    onChangeData={onChangeData}\n                    is12Hour={props.is12Hour}\n                    timeFormat={props.timeFormat}\n                    startOfWeek={props.startOfWeek}\n                    storeName={props.storeName}\n                    strings={props.strings} />\n            </div>\n        </PluginDocumentSettingPanel>\n    );\n};\n","import { FutureActionPanel, SelectControl } from '.';\nimport { getElementByName } from '../utils';\n\nexport const FutureActionPanelBulkEdit = (props) => {\n    const { useSelect, useDispatch, select } = wp.data;\n\n    const onChangeData = (attribute, value) => {\n        getElementByName('future_action_bulk_enabled').value = select(props.storeName).getEnabled() ? 1 : 0;\n        getElementByName('future_action_bulk_action').value = select(props.storeName).getAction();\n        getElementByName('future_action_bulk_date').value = select(props.storeName).getDate();\n        getElementByName('future_action_bulk_terms').value = select(props.storeName).getTerms().join(',');\n        getElementByName('future_action_bulk_taxonomy').value = select(props.storeName).getTaxonomy();\n    }\n\n    const date = useSelect((select) => select(props.storeName).getDate(), []);\n    const enabled = useSelect((select) => select(props.storeName).getEnabled(), []);\n    const action = useSelect((select) => select(props.storeName).getAction(), []);\n    const terms = useSelect((select) => select(props.storeName).getTerms(), []);\n    const taxonomy = useSelect((select) => select(props.storeName).getTaxonomy(), []);\n    const changeAction = useSelect((select) => select(props.storeName).getChangeAction(), []);\n\n    const {\n        setChangeAction\n    } = useDispatch(props.storeName);\n\n    let termsString = terms;\n    if (typeof terms === 'object') {\n        termsString = terms.join(',');\n    }\n\n    const handleStrategyChange = (value) => {\n        setChangeAction(value);\n    };\n\n    const options = [\n        { value: 'no-change', label: props.strings.noChange },\n        { value: 'change-add', label: props.strings.changeAdd },\n        { value: 'add-only', label: props.strings.addOnly },\n        { value: 'change-only', label: props.strings.changeOnly },\n        { value: 'remove-only', label: props.strings.removeOnly },\n    ];\n\n    const optionsToDisplayPanel = ['change-add', 'add-only', 'change-only'];\n\n    return (\n        <div className={'post-expirator-panel'}>\n            <SelectControl\n                label={props.strings.futureActionUpdate}\n                name={'future_action_bulk_change_action'}\n                value={changeAction}\n                options={options}\n                onChange={handleStrategyChange}\n            />\n\n            {optionsToDisplayPanel.includes(changeAction) && (\n                <FutureActionPanel\n                    context={'bulk-edit'}\n                    autoEnableAndHideCheckbox={true}\n                    postType={props.postType}\n                    isCleanNewPost={props.isNewPost}\n                    actionsSelectOptions={props.actionsSelectOptions}\n                    enabled={true}\n                    calendarIsVisible={false}\n                    action={action}\n                    date={date}\n                    terms={terms}\n                    taxonomy={taxonomy}\n                    taxonomyName={props.taxonomyName}\n                    onChangeData={onChangeData}\n                    is12Hour={props.is12Hour}\n                    timeFormat={props.timeFormat}\n                    startOfWeek={props.startOfWeek}\n                    storeName={props.storeName}\n                    strings={props.strings} />\n            )}\n\n            {/* Bulk edit JS code will save only fields with name inside the edit row */}\n            <input type=\"hidden\" name={'future_action_bulk_enabled'} value={enabled ? 1 : 0} />\n            <input type=\"hidden\" name={'future_action_bulk_action'} value={action} />\n            <input type=\"hidden\" name={'future_action_bulk_date'} value={date} />\n            <input type=\"hidden\" name={'future_action_bulk_terms'} value={termsString} />\n            <input type=\"hidden\" name={'future_action_bulk_taxonomy'} value={taxonomy} />\n            <input type=\"hidden\" name={'future_action_bulk_view'} value=\"bulk-edit\" />\n            <input type=\"hidden\" name={'_future_action_nonce'} value={props.nonce} />\n        </div>\n    );\n};\n","import { FutureActionPanel } from \"./\";\nimport { select } from \"&wp.data\";\n\nexport const FutureActionPanelClassicEditor = (props) => {\n    const browserTimezoneOffset = new Date().getTimezoneOffset();\n\n    const getElementByName = (name) => {\n        return document.getElementsByName(name)[0];\n    }\n\n    const onChangeData = (attribute, value) => {\n        const store = select(props.storeName);\n\n        getElementByName('future_action_enabled').value = store.getEnabled() ? 1 : 0;\n        getElementByName('future_action_action').value = store.getAction();\n        getElementByName('future_action_date').value = store.getDate();\n        getElementByName('future_action_terms').value = store.getTerms().join(',');\n        getElementByName('future_action_taxonomy').value = store.getTaxonomy();\n    }\n\n    const getTermsFromElementByName = (name) => {\n        const element = getElementByName(name);\n        if (!element) {\n            return [];\n        }\n\n        let terms = element.value.split(',');\n\n        if (terms.length === 1 && terms[0] === '') {\n            terms = [];\n        }\n\n        return terms.map(term => parseInt(term));\n    }\n\n    const getElementValueByName = (name) => {\n        const element = getElementByName(name);\n        if (!element) {\n            return '';\n        }\n\n        return element.value;\n    }\n\n    const data = {\n        enabled: getElementValueByName('future_action_enabled') === '1',\n        action: getElementValueByName('future_action_action'),\n        date: getElementValueByName('future_action_date'),\n        terms: getTermsFromElementByName('future_action_terms'),\n        taxonomy: getElementValueByName('future_action_taxonomy'),\n    };\n\n    return (\n        <div className={'post-expirator-panel'}>\n            <FutureActionPanel\n                context={'classic-editor'}\n                postType={props.postType}\n                isCleanNewPost={props.isNewPost}\n                actionsSelectOptions={props.actionsSelectOptions}\n                enabled={data.enabled}\n                calendarIsVisible={true}\n                action={data.action}\n                date={data.date}\n                terms={data.terms}\n                taxonomy={data.taxonomy}\n                taxonomyName={props.taxonomyName}\n                onChangeData={onChangeData}\n                is12Hour={props.is12Hour}\n                timeFormat={props.timeFormat}\n                startOfWeek={props.startOfWeek}\n                storeName={props.storeName}\n                strings={props.strings} />\n        </div>\n    );\n};\n","import { FutureActionPanel } from './';\nimport { useSelect, select } from '&wp.data';\nimport { useEffect } from '&wp.element';\n\nexport const FutureActionPanelQuickEdit = (props) => {\n    const onChangeData = (attribute, value) => {};\n\n    const date = useSelect((select) => select(props.storeName).getDate(), []);\n    const enabled = useSelect((select) => select(props.storeName).getEnabled(), []);\n    const action = useSelect((select) => select(props.storeName).getAction(), []);\n    const terms = useSelect((select) => select(props.storeName).getTerms(), []);\n    const taxonomy = useSelect((select) => select(props.storeName).getTaxonomy(), []);\n    const hasValidData = useSelect((select) => select(props.storeName).getHasValidData(), []);\n\n    let termsString = terms;\n    if (typeof terms === 'object') {\n        termsString = terms.join(',');\n    }\n\n    useEffect(() => {\n        const originalUpdate = inlineEditPost.save;\n\n        const overwriteSaveMethod = () => {\n            inlineEditPost.save = () => false;\n        };\n\n        const restoreOriginalSaveMethod = () => {\n            inlineEditPost.save = originalUpdate;\n        }\n\n        const callOriginalSaveMethod = (event) => {\n            originalUpdate.apply(inlineEditPost, [inlineEditPost.getId(event.target)]);\n        }\n\n        const unmountComponent = () => {\n            setTimeout(props.root.unmount, 1000);\n        }\n\n        const abortSave = (event) => {\n            event.preventDefault();\n            event.stopPropagation();\n\n            return false;\n        }\n\n        const onClickSave = (event) => {\n            const formDataIsValid = select(props.storeName).getHasValidData();\n\n            if (! formDataIsValid) {\n                return abortSave(event);\n            }\n\n            callOriginalSaveMethod(event);\n\n            unmountComponent();\n\n            return true;\n        }\n\n        overwriteSaveMethod();\n\n        jQuery('.button-primary.save').on('click', onClickSave);\n\n        return () => {\n            restoreOriginalSaveMethod();\n        }\n    }, []);\n\n    useEffect(() => {\n        if (hasValidData) {\n            jQuery('.button-primary.save').prop('disabled', false);\n        } else {\n            jQuery('.button-primary.save').prop('disabled', true);\n        }\n    }, [hasValidData]);\n\n\n    return (\n        <div className={'post-expirator-panel'}>\n            <FutureActionPanel\n                context={'quick-edit'}\n                postType={props.postType}\n                isCleanNewPost={props.isNewPost}\n                actionsSelectOptions={props.actionsSelectOptions}\n                enabled={enabled}\n                calendarIsVisible={false}\n                action={action}\n                date={date}\n                terms={terms}\n                taxonomy={taxonomy}\n                taxonomyName={props.taxonomyName}\n                onChangeData={onChangeData}\n                is12Hour={props.is12Hour}\n                timeFormat={props.timeFormat}\n                startOfWeek={props.startOfWeek}\n                storeName={props.storeName}\n                strings={props.strings} />\n\n            {/* Quick edit JS code will save only fields with name inside the edit row */}\n            <input type=\"hidden\" name={'future_action_enabled'} value={enabled ? 1 : 0} />\n            <input type=\"hidden\" name={'future_action_action'} value={action ? action : ''} />\n            <input type=\"hidden\" name={'future_action_date'} value={date ? date : ''} />\n            <input type=\"hidden\" name={'future_action_terms'} value={termsString ? termsString : ''} />\n            <input type=\"hidden\" name={'future_action_taxonomy'} value={taxonomy ? taxonomy : ''} />\n            <input type=\"hidden\" name={'future_action_view'} value=\"quick-edit\" />\n            <input type=\"hidden\" name={'_future_action_nonce'} value={props.nonce} />\n        </div>\n    );\n};\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\nimport { Fragment } from \"&wp.element\";\n\nexport const NonceControl = function (props) {\n    if (! props.name) {\n        props.name = '_wpnonce';\n    }\n\n    if (! props.referrer) {\n        props.referrer = true;\n    }\n\n    return (\n        <Fragment>\n            <input type=\"hidden\" name={props.name} id={props.name} value={props.nonce} />\n\n            {props.referrer &&\n                <input type=\"hidden\" name=\"_wp_http_referer\" value={props.referrer}/>\n            }\n        </Fragment>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\n\nimport {\n    SettingRow,\n    SettingsFieldset,\n    SettingsTable,\n    SelectControl,\n    TextControl,\n    TokensControl,\n    CheckboxControl\n} from './';\nimport { useEffect, useState } from '&wp.element';\nimport { addQueryArgs } from '&wp.url';\nimport { applyFilters } from '&wp.hooks';\nimport { apiFetch } from '&wp';\n\nexport const PostTypeSettingsPanel = function (props) {\n    const [postTypeTaxonomy, setPostTypeTaxonomy] = useState(props.settings.taxonomy);\n    const [termOptions, setTermOptions] = useState([]);\n    const [termsSelectIsLoading, setTermsSelectIsLoading] = useState(false);\n    const [selectedTerms, setSelectedTerms] = useState([]);\n    const [settingHowToExpire, setSettingHowToExpire] = useState(props.settings.howToExpire);\n    const [isActive, setIsActive] = useState(props.settings.active);\n    const [expireOffset, setExpireOffset] = useState(props.settings.defaultExpireOffset);\n    const [emailNotification, setEmailNotification] = useState(props.settings.emailNotification);\n    const [isAutoEnabled, setIsAutoEnabled] = useState(props.settings.autoEnabled);\n\n    const onChangeTaxonomy = function (value) {\n        setPostTypeTaxonomy(value);\n    };\n\n    const onChangeTerms = (value) => {\n        setSelectedTerms(value);\n    };\n\n    const onChangeHowToExpire = (value) => {\n        setSettingHowToExpire(value);\n    }\n\n    const onChangeActive = (value) => {\n        setIsActive(value);\n    }\n\n    const onChangeExpireOffset = (value) => {\n        setExpireOffset(value);\n    }\n\n    const onChangeEmailNotification = (value) => {\n        setEmailNotification(value);\n    }\n\n    const onChangeAutoEnabled = (value) => {\n        setIsAutoEnabled(value);\n    }\n\n    useEffect(() => {\n        if (!postTypeTaxonomy || !props.taxonomiesList) {\n            return;\n        }\n\n        setTermsSelectIsLoading(true);\n        apiFetch({\n            path: addQueryArgs(`publishpress-future/v1/terms/${postTypeTaxonomy}`),\n        }).then((result) => {\n            let options = [];\n\n            let settingsTermsOptions = null;\n            let option;\n\n            result.terms.forEach(term => {\n                option = { value: term.id, label: term.name };\n                options.push(option);\n\n                if (postTypeTaxonomy === props.settings.taxonomy && props.settings.terms.includes(term.id)) {\n                    if (settingsTermsOptions === null) {\n                        settingsTermsOptions = [];\n                    }\n\n                    settingsTermsOptions.push(option.label);\n                }\n            });\n\n            setTermOptions(options);\n            setSelectedTerms(settingsTermsOptions);\n            setTermsSelectIsLoading(false);\n        });\n    }, [postTypeTaxonomy]);\n\n    const termOptionsLabels = termOptions.map((term) => term.label);\n\n    let settingsRows = [\n        <SettingRow label={props.text.fieldActive} key={'expirationdate_activemeta-' + props.postType}>\n            <CheckboxControl\n                name={'expirationdate_activemeta-' + props.postType}\n                checked={isActive || false}\n                label={props.text.fieldActiveLabel}\n                onChange={onChangeActive}\n            />\n        </SettingRow>\n    ];\n\n    if (isActive) {\n        settingsRows.push(\n            <SettingRow label={props.text.fieldAutoEnable} key={'expirationdate_autoenable-' + props.postType}>\n                <CheckboxControl\n                    name={'expirationdate_autoenable-' + props.postType}\n                    checked={isAutoEnabled || false}\n                    label={props.text.fieldAutoEnableLabel}\n                    onChange={onChangeAutoEnabled}\n                />\n            </SettingRow>\n        );\n\n        settingsRows.push(\n            <SettingRow label={props.text.fieldTaxonomy} key={'expirationdate_taxonomy-' + props.postType}>\n                <SelectControl\n                    name={'expirationdate_taxonomy-' + props.postType}\n                    options={props.taxonomiesList}\n                    selected={postTypeTaxonomy}\n                    noItemFoundMessage={props.text.noItemsfound}\n                    description={props.text.fieldTaxonomyDescription}\n                    data={props.postType}\n                    onChange={onChangeTaxonomy}\n                >\n                </SelectControl>\n            </SettingRow>\n        );\n\n        // Remove items from expireTypeList if related to taxonomies and there is no taxonmoy for the post type\n        if (props.taxonomiesList.length === 0) {\n            props.expireTypeList[props.postType] = props.expireTypeList[props.postType].filter((item) => {\n                return ['category', 'category-add', 'category-remove'].indexOf(item.value) === -1;\n            });\n        }\n\n        settingsRows.push(\n            <SettingRow label={props.text.fieldHowToExpire} key={'expirationdate_expiretype-' + props.postType}>\n                <SelectControl\n                    name={'expirationdate_expiretype-' + props.postType}\n                    className={'pe-howtoexpire'}\n                    options={props.expireTypeList[props.postType]}\n                    description={props.text.fieldHowToExpireDescription}\n                    selected={settingHowToExpire}\n                    onChange={onChangeHowToExpire}\n                />\n\n                {(props.taxonomiesList.length > 0 && (['category', 'category-add', 'category-remove'].indexOf(settingHowToExpire) > -1)) &&\n                    <TokensControl\n                        label={props.text.fieldTerm}\n                        name={'expirationdate_terms-' + props.postType}\n                        options={termOptionsLabels}\n                        value={selectedTerms}\n                        isLoading={termsSelectIsLoading}\n                        onChange={onChangeTerms}\n                        description={props.text.fieldTermDescription}\n                        maxSuggestions={1000}\n                        expandOnFocus={true}\n                        autoSelectFirstMatch={true}\n                    />\n                }\n            </SettingRow>\n        );\n\n        settingsRows.push(\n            <SettingRow label={props.text.fieldDefaultDateTimeOffset} key={'expired-custom-date-' + props.postType}>\n                <TextControl\n                    name={'expired-custom-date-' + props.postType}\n                    value={expireOffset}\n                    placeholder={props.settings.globalDefaultExpireOffset}\n                    description={props.text.fieldDefaultDateTimeOffsetDescription}\n                    unescapedDescription={true}\n                    onChange={onChangeExpireOffset}\n                />\n            </SettingRow>\n        );\n\n        settingsRows.push(\n            <SettingRow label={props.text.fieldWhoToNotify} key={'expirationdate_emailnotification-' + props.postType}>\n                <TextControl\n                    name={'expirationdate_emailnotification-' + props.postType}\n                    className=\"large-text\"\n                    value={emailNotification}\n                    description={props.text.fieldWhoToNotifyDescription}\n                    onChange={onChangeEmailNotification}\n                />\n            </SettingRow>\n        );\n    }\n\n    settingsRows = applyFilters('expirationdate_settings_posttype', settingsRows, props, isActive, useState);\n\n    return (\n        <SettingsFieldset legend={props.legend}>\n            <SettingsTable bodyChildren={settingsRows} />\n        </SettingsFieldset>\n    );\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\n\nimport { PostTypeSettingsPanel } from \"./\";\n\nexport const PostTypesSettingsPanels = function (props) {\n    let panels = [];\n\n    for (const [postType, postTypeSettings] of Object.entries(props.settings)) {\n        panels.push(\n            <PostTypeSettingsPanel\n                legend={postTypeSettings.label}\n                text={props.text}\n                postType={postType}\n                settings={postTypeSettings}\n                expireTypeList={props.expireTypeList}\n                taxonomiesList={props.taxonomiesList[postType]}\n                key={`${postType}-panel`}\n            />\n        );\n    }\n\n    return (panels);\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\nimport { Fragment } from \"&wp.element\";\nimport { SelectControl as WPSelectControl } from \"&wp.components\";\n\nexport const SelectControl = function (props) {\n    const onChange = (value) => {\n        props.onChange(value);\n    };\n\n    return (\n        <Fragment>\n            {props.options.length === 0 && (\n                <div>{props.noItemFoundMessage}</div>\n            )}\n\n            {props.options.length > 0 && (\n                <WPSelectControl\n                    label={props.label}\n                    name={props.name}\n                    id={props.name}\n                    className={props.className}\n                    value={props.selected}\n                    onChange={onChange}\n                    data-data={props.data}\n                    options={props.options}\n                />\n            )}\n\n            {props.children}\n\n            <p className=\"description\">{props.description}</p>\n        </Fragment>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\nimport { Fragment } from \"&wp.element\";\n\nexport const SettingRow = function (props) {\n    return (\n        <tr valign=\"top\">\n            <th scope=\"row\">\n                <label htmlFor=\"\">{props.label}</label>\n            </th>\n            <td>\n                {props.children}\n            </td>\n        </tr>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\n\nexport const SettingsFieldset = function (props) {\n    return (\n        <fieldset>\n                <legend>{props.legend}</legend>\n                {props.children}\n        </fieldset>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\n\nexport const SettingsForm = function (props) {\n    return (\n        <form method=\"post\">\n            {props.children}\n        </form>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\nimport { Fragment } from \"&wp.element\";\n\nexport const SettingsSection = function (props) {\n    return (\n        <Fragment>\n            <h2>{props.title}</h2>\n            <p>{props.description}</p>\n            {props.children}\n        </Fragment>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\n\nexport const SettingsTable = function (props) {\n    return (\n        <table className=\"form-table\">\n            <tbody>\n                {props.bodyChildren}\n            </tbody>\n        </table>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\n\nexport const SubmitButton = function (props) {\n    return (\n        <input\n            type=\"submit\"\n            name={props.name}\n            value={props.text}\n            className=\"button-primary\"\n        />\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\nimport { Fragment } from \"&wp.element\";\nimport { TextControl as WPTextControl } from \"&wp.components\";\n\nexport const TextControl = function (props) {\n    let description;\n\n    if (props.unescapedDescription) {\n        // If using this option, the HTML has to be escaped before injected into the JS interface.\n        description = <p className=\"description\" dangerouslySetInnerHTML={{ __html: props.description }}></p>;\n    } else {\n        description = <p className=\"description\">{props.description}</p>;\n    }\n\n    const onChange = function (value) {\n        if (props.onChange) {\n            props.onChange(value);\n        }\n    };\n\n    return (\n        <Fragment>\n            <WPTextControl\n                type=\"text\"\n                label={props.label}\n                name={props.name}\n                id={props.name}\n                className={props.className}\n                value={props.value}\n                placeholder={props.placeholder}\n                onChange={onChange}\n            />\n\n            {description}\n        </Fragment>\n    )\n}\n","import { Button } from '&wp.components';\n\nexport const ToggleArrowButton = function (props) {\n    const onClick = function () {\n        if (props.onClick) {\n            props.onClick();\n        }\n    };\n\n    const iconExpanded = props.iconExpanded ? props.iconExpanded : 'arrow-up-alt2';\n    const iconCollapsed = props.iconCollapsed ? props.iconCollapsed : 'arrow-down-alt2';\n\n    const icon = props.isExpanded ? iconExpanded : iconCollapsed;\n\n    const title = props.isExpanded ? props.titleExpanded : props.titleCollapsed;\n\n    return (\n        <Button\n            isSmall\n            title={title}\n            icon={icon}\n            onClick={onClick}\n            className={props.className}\n        />\n    )\n}\n","import { ToggleArrowButton } from \"./ToggleArrowButton\";\nimport { DateTimePicker } from \"./DateTimePicker\";\nimport { Fragment, useEffect } from \"&wp.element\";\n\nexport const ToggleCalendarDatePicker = (\n    {\n        isExpanded,\n        strings,\n        onToggleCalendar,\n        currentDate,\n        onChangeDate,\n        is12Hour,\n        startOfWeek\n    }\n) => {\n    useEffect(() => {\n        // Move the element of the toggle button to between the time and date elements.\n        const toggleButtonElement = document.querySelector('.future-action-calendar-toggle');\n\n        if (! toggleButtonElement) {\n            return;\n        }\n\n        const dateTimeElement = toggleButtonElement.nextElementSibling;\n\n        if (! dateTimeElement) {\n            return;\n        }\n\n        const timeElement = dateTimeElement.querySelector('.components-datetime__time');\n\n        if (! timeElement) {\n            return;\n        }\n\n        const dateElement = timeElement.nextSibling;\n\n        if (! dateElement) {\n            return;\n        }\n\n        dateTimeElement.insertBefore(toggleButtonElement, dateElement)\n    });\n\n    return (\n        <Fragment>\n            <ToggleArrowButton\n                className=\"future-action-calendar-toggle\"\n                isExpanded={isExpanded}\n                iconExpanded=\"arrow-up-alt2\"\n                iconCollapsed=\"calendar\"\n                titleExpanded={strings.hideCalendar}\n                titleCollapsed={strings.showCalendar}\n                onClick={onToggleCalendar} />\n\n            <DateTimePicker\n                currentDate={currentDate}\n                onChange={onChangeDate}\n                __nextRemoveHelpButton={true}\n                is12Hour={is12Hour}\n                startOfWeek={startOfWeek}\n            />\n        </Fragment>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\nimport { Fragment, useState, useEffect } from \"&wp.element\";\nimport { FormTokenField } from \"&wp.components\";\n\nexport const TokensControl = (props) => {\n    const [stringValue, setStringValue] = useState('');\n\n    useEffect(() => {\n        if (props.value) {\n            setStringValue(props.value.join(','));\n        }\n    }, [props.value]);\n\n    let description;\n\n    if (props.description) {\n        if (props.unescapedDescription) {\n            // If using this option, the HTML has to be escaped before injected into the JS interface.\n            description = <p className=\"description\" dangerouslySetInnerHTML={{__html: props.description}}></p>;\n        } else {\n            description = <p className=\"description\">{props.description}</p>;\n        }\n    }\n\n    const onChange = (value) => {\n        if (props.onChange) {\n            props.onChange(value);\n        }\n\n        if (typeof value === 'object') {\n            setStringValue(value.join(','));\n        } else {\n            setStringValue('');\n        }\n    }\n\n    const value = props.value ? props.value : [];\n \n    return (\n        <Fragment>\n            <FormTokenField\n                label={props.label}\n                value={value}\n                suggestions={props.options}\n                onChange={onChange}\n                maxSuggestions={props.maxSuggestions}\n                className=\"publishpres-future-token-field\"\n                __experimentalExpandOnFocus={props.expandOnFocus}\n                __experimentalAutoSelectFirstMatch={props.autoSelectFirstMatch}\n            />\n            <input type=\"hidden\" name={props.name} value={stringValue} />\n\n            {description}\n        </Fragment>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\n\nexport const TrueFalseControl = function (props) {\n    const { Fragment } = wp.element;\n\n    const onChange = (e) => {\n        if (props.onChange) {\n            props.onChange(\n                e.target.value === props.trueValue && jQuery(e.target).is(':checked')\n            );\n            // Check only the true radio... using the field name? or directly the ID\n        }\n    };\n\n    return (\n        <Fragment>\n            <input\n                type=\"radio\"\n                name={props.name}\n                id={props.name + '-true'}\n                value={props.trueValue}\n                defaultChecked={props.selected}\n                onChange={onChange}\n            />\n\n            <label htmlFor={props.name + '-true'}>{props.trueLabel}</label>\n            &nbsp;&nbsp;\n            <input\n                type=\"radio\"\n                name={props.name}\n                defaultChecked={!props.selected}\n                id={props.name + '-false'}\n                value={props.falseValue}\n                onChange={onChange}\n            />\n            <label\n                htmlFor={props.name + '-false'}>{props.falseLabel}</label>\n\n            <p className=\"description\">{props.description}</p>\n        </Fragment>\n    )\n}\n","export { ButtonsPanel } from \"./ButtonsPanel\";\nexport { FutureActionPanel } from \"./FutureActionPanel\";\nexport { FutureActionPanelBlockEditor } from \"./FutureActionPanelBlockEditor\";\nexport { FutureActionPanelClassicEditor } from \"./FutureActionPanelClassicEditor\";\nexport { FutureActionPanelQuickEdit } from \"./FutureActionPanelQuickEdit\";\nexport { FutureActionPanelBulkEdit } from \"./FutureActionPanelBulkEdit\";\nexport { PostTypeSettingsPanel } from \"./PostTypeSettingsPanel\";\nexport { PostTypesSettingsPanels } from \"./PostTypesSettingsPanels\";\nexport { SettingRow } from \"./SettingRow\";\nexport { SettingsFieldset } from \"./SettingsFieldset\";\nexport { SettingsForm } from \"./SettingsForm\";\nexport { SettingsSection } from \"./SettingsSection\";\nexport { SettingsTable } from \"./SettingsTable\";\nexport { SubmitButton } from \"./SubmitButton\";\nexport { CheckboxControl } from \"./CheckboxControl\";\nexport { SelectControl } from \"./SelectControl\";\nexport { TextControl } from \"./TextControl\";\nexport { TokensControl } from \"./TokensControl\";\nexport { NonceControl } from \"./NonceControl\";\nexport { TrueFalseControl } from \"./TrueFalseControl\";\n","export const getCurrentTimeInSeconds = () => {\n    return normalizeUnixTimeToSeconds(new Date().getTime());\n}\n\nexport const getCurrentTimeAsTimestamp = () => {\n    return formatUnixTimeToTimestamp(getCurrentTimeInSeconds());\n}\n\nexport const formatUnixTimeToTimestamp = (unixTimestamp) => {\n    const date = new Date(\n        normalizeUnixTimeToSeconds(unixTimestamp)\n    );\n\n    const year = date.getFullYear();\n    const month = (\"0\" + (date.getMonth() + 1)).slice(-2); // Months are zero-based\n    const day = (\"0\" + date.getDate()).slice(-2);\n    const hours = (\"0\" + date.getHours()).slice(-2);\n    const minutes = (\"0\" + date.getMinutes()).slice(-2);\n    const seconds = (\"0\" + date.getSeconds()).slice(-2);\n\n    return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\n}\n\nexport const formatTimestampToUnixTime = (time) => {\n    const date = new Date(time);\n\n    return normalizeUnixTimeToSeconds(date.getTime());\n}\n\nexport const timeIsInSeconds = (time) => {\n    return parseInt(time).toString().length <= 10;\n}\n\nexport const normalizeUnixTimeToSeconds = (time) => {\n    time = parseInt(time);\n\n    return timeIsInSeconds() ? time : time / 1000;\n}\n\nexport const normalizeUnixTimeToMilliseconds = (time) => {\n    time = parseInt(time);\n\n    return timeIsInSeconds() ? time * 1000 : time;\n}\n","export const compact = (array) => {\n    if (!array) {\n        return [];\n    }\n\n    if (! Array.isArray(array) && typeof array === 'object') {\n        array = Object.values(array);\n    }\n\n    return array.filter((item) => {\n        return item !== null && item !== undefined && item !== '';\n    });\n}\n\nexport const debugLogFactory = (config) => {\n    return (description, ...message) => {\n        if (console && config.isDebugEnabled) {\n            console.debug('[Future]', description, ...message);\n        }\n    }\n}\n\nexport const isGutenbergEnabled = () => {\n    return document.body.classList.contains('block-editor-page');\n}\n\nexport const getElementByName = (name) => {\n    return document.getElementsByName(name)[0];\n}\n\nexport const getFieldByName = (name, postId) => {\n    return document.querySelector(`#the-list tr#post-${postId} .column-expirationdate input#future_action_${name}-${postId}`);\n}\n\nexport const getFieldValueByName = (name, postId) => {\n    const field = getFieldByName(name, postId);\n\n    if (!field) {\n        return null;\n    }\n\n    return field.value;\n};\n\nexport const getFieldValueByNameAsArrayOfInt = (name, postId) => {\n    const field = getFieldByName(name, postId);\n\n    if (!field || !field.value) {\n        return [];\n    }\n\n    if (typeof field.value === 'number') {\n        field.value = field.value.toString();\n    }\n\n    return field.value.split(',').map(term => parseInt(term));\n};\n\nexport const getFieldValueByNameAsBool = (name, postId) => {\n    const field = getFieldByName(name, postId);\n\n    if (!field) {\n        return false;\n    }\n\n    return field.value === '1' || field.value === 'true';\n}\n\nexport const getActionSettingsFromColumnData = (postId) => {\n    const columnData = document.querySelector(`#post-expire-column-${postId}`);\n\n    return {\n        enabled: columnData.dataset.actionEnabled === '1',\n        action: columnData.dataset.actionType,\n        date: columnData.dataset.actionDate,\n        dateUnix: columnData.dataset.actionDateUnix,\n        taxonomy: columnData.dataset.actionTaxonomy,\n        terms: columnData.dataset.actionTerms,\n    };\n}\n\n/**\n * This function is used to determine if a value is a number, including strings.\n *\n * @param {*} value\n * @returns\n */\nexport const isNumber = (value) => {\n    return !isNaN(value);\n}\n","module.exports = ReactDOM;","module.exports = publishpressFutureSettingsConfig;","module.exports = wp;","module.exports = wp.components;","module.exports = wp.data;","module.exports = wp.element;","module.exports = wp.hooks;","module.exports = wp.url;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\n\nimport {\n    SettingsForm,\n    SettingsSection,\n    PostTypesSettingsPanels,\n    SubmitButton,\n    ButtonsPanel,\n    NonceControl\n} from \"./components\";\n\nimport { StrictMode, createRoot } from \"&wp.element\";\n\nimport {\n    nonce,\n    referrer,\n    settings,\n    expireTypeList,\n    taxonomiesList,\n    text\n} from \"&config.settings-post-types\";\nimport { render } from \"&ReactDOM\";\n\nconst SettingsFormPanel = (props) => {\n    return (\n        <StrictMode>\n            <SettingsForm>\n                <NonceControl\n                    name=\"_postExpiratorMenuDefaults_nonce\"\n                    nonce={nonce}\n                    referrer={referrer}\n                />\n                <SettingsSection\n                    title={text.settingsSectionTitle}\n                    description={text.settingsSectionDescription}>\n                    <PostTypesSettingsPanels\n                        settings={settings}\n                        text={text}\n                        expireTypeList={expireTypeList}\n                        taxonomiesList={taxonomiesList}\n                    />\n                </SettingsSection>\n\n                <ButtonsPanel>\n                    <SubmitButton\n                        name=\"expirationdateSaveDefaults\"\n                        text={text.saveChanges}\n                    />\n                </ButtonsPanel>\n            </SettingsForm>\n        </StrictMode>\n    )\n};\n\nconst container = document.getElementById(\"publishpress-future-settings-post-types\");\nconst component = (<SettingsFormPanel />);\nif (createRoot) {\n    createRoot(container).render(component);\n} else {\n    render(component, container);\n}\n"],"names":["ButtonsPanel","props","children","CheckboxControl","checked","setChecked","description","unescapedDescription","__html","onChange","value","label","name","className","DateTimePicker","currentDate","is12Hour","startOfWeek","wp","components","PanelRow","SelectControl","FormTokenField","Spinner","BaseControl","element","Fragment","useEffect","useState","decodeEntities","htmlEntities","addQueryArgs","url","data","useSelect","useDispatch","apiFetch","FutureActionPanel","action","select","storeName","getAction","date","getDate","enabled","getEnabled","terms","getTerms","taxonomy","getTaxonomy","taxonomyName","getTaxonomyName","termsListByName","getTermsListByName","termsListById","getTermsListById","isFetchingTerms","getIsFetchingTerms","calendarIsVisible","getCalendarIsVisible","hasValidData","getHasValidData","validationError","setValidationError","setAction","setDate","setEnabled","setTerms","setTaxonomy","setTermsListByName","setTermsListById","setTaxonomyName","setIsFetchingTerms","setCalendarIsVisible","setHasValidData","mapTermsListById","map","term","insertTerm","id","count","link","slug","mapTermsListByName","callOnChangeData","attribute","onChangeData","handleEnabledChange","isChecked","fetchTerms","handleActionChange","handleDateChange","handleTermsChange","path","then","result","forEach","storeCalendarIsVisibleOnStorage","localStorage","setItem","context","getCalendarIsVisibleFromStorage","getItem","autoEnableAndHideCheckbox","isCleanNewPost","selectedTerms","length","termsListByNameKeys","Object","keys","panelClass","contentPanelClass","datePanelClass","is24hour","timeFormat","replaceCurlyBracketsWithLink","string","href","target","parts","split","push","shift","part","before","after","actionsSelectOptions","filter","item","indexOf","HelpText","strings","timezoneSettingsHelp","displayTaxonomyField","String","includes","termsFieldLabel","newTerms","replace","removeTerms","addTerms","validateData","valid","errorActionRequired","errorDateRequired","isTermRequired","noTermIsSelected","errorTermsRequired","enablePostExpiration","loading","noTaxonomyFound","noTermsFound","addTermsPlaceholder","FutureActionPanelBlockEditor","PluginDocumentSettingPanel","editPost","editPostAttribute","newAttribute","publishpress_future_action","entries","store","getEditedPostAttribute","panelTitle","postTypeDefaultConfig","autoEnable","postType","FutureActionPanelBulkEdit","join","changeAction","getChangeAction","setChangeAction","termsString","handleStrategyChange","options","noChange","changeAdd","addOnly","changeOnly","removeOnly","optionsToDisplayPanel","futureActionUpdate","isNewPost","nonce","FutureActionPanelClassicEditor","browserTimezoneOffset","Date","getTimezoneOffset","getElementByName","document","getElementsByName","getTermsFromElementByName","parseInt","getElementValueByName","FutureActionPanelQuickEdit","originalUpdate","inlineEditPost","save","overwriteSaveMethod","restoreOriginalSaveMethod","callOriginalSaveMethod","event","apply","getId","unmountComponent","setTimeout","root","unmount","abortSave","preventDefault","stopPropagation","onClickSave","formDataIsValid","jQuery","on","prop","NonceControl","referrer","PostTypeSettingsPanel","settings","postTypeTaxonomy","setPostTypeTaxonomy","termOptions","setTermOptions","termsSelectIsLoading","setTermsSelectIsLoading","setSelectedTerms","howToExpire","settingHowToExpire","setSettingHowToExpire","active","isActive","setIsActive","defaultExpireOffset","expireOffset","setExpireOffset","emailNotification","setEmailNotification","autoEnabled","isAutoEnabled","setIsAutoEnabled","onChangeTaxonomy","onChangeTerms","onChangeHowToExpire","onChangeActive","onChangeExpireOffset","onChangeEmailNotification","onChangeAutoEnabled","taxonomiesList","settingsTermsOptions","option","termOptionsLabels","settingsRows","text","fieldActive","fieldActiveLabel","fieldAutoEnable","fieldAutoEnableLabel","fieldTaxonomy","noItemsfound","fieldTaxonomyDescription","expireTypeList","fieldHowToExpire","fieldHowToExpireDescription","fieldTerm","fieldTermDescription","fieldDefaultDateTimeOffset","globalDefaultExpireOffset","fieldDefaultDateTimeOffsetDescription","fieldWhoToNotify","fieldWhoToNotifyDescription","legend","PostTypesSettingsPanels","panels","postTypeSettings","noItemFoundMessage","selected","SettingRow","SettingsFieldset","SettingsForm","SettingsSection","title","SettingsTable","bodyChildren","SubmitButton","TextControl","placeholder","ToggleArrowButton","onClick","iconExpanded","iconCollapsed","icon","isExpanded","titleExpanded","titleCollapsed","ToggleCalendarDatePicker","onToggleCalendar","onChangeDate","toggleButtonElement","querySelector","dateTimeElement","nextElementSibling","timeElement","dateElement","nextSibling","insertBefore","hideCalendar","showCalendar","TokensControl","stringValue","setStringValue","maxSuggestions","expandOnFocus","autoSelectFirstMatch","TrueFalseControl","e","trueValue","is","trueLabel","falseValue","falseLabel","getCurrentTimeInSeconds","normalizeUnixTimeToSeconds","getTime","getCurrentTimeAsTimestamp","formatUnixTimeToTimestamp","unixTimestamp","year","getFullYear","month","getMonth","slice","day","hours","getHours","minutes","getMinutes","seconds","getSeconds","formatTimestampToUnixTime","time","timeIsInSeconds","toString","normalizeUnixTimeToMilliseconds","compact","array","Array","isArray","values","undefined","debugLogFactory","config","message","console","isDebugEnabled","debug","isGutenbergEnabled","body","classList","contains","getFieldByName","postId","getFieldValueByName","field","getFieldValueByNameAsArrayOfInt","getFieldValueByNameAsBool","getActionSettingsFromColumnData","columnData","dataset","actionEnabled","actionType","actionDate","dateUnix","actionDateUnix","actionTaxonomy","actionTerms","isNumber","isNaN","SettingsFormPanel","settingsSectionTitle","settingsSectionDescription","saveChanges","container","getElementById","component","createRoot","render"],"sourceRoot":""}